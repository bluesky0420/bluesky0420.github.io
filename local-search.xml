<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Windows系统高级设置</title>
    <link href="/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E9%AB%98%E7%BA%A7%E8%AE%BE%E7%BD%AE/"/>
    <url>/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E9%AB%98%E7%BA%A7%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>【<strong>编写目的</strong>】：为了便于新装系统后以及<a href="https://bluesky0420.github.io/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E5%B0%81%E8%A3%85%E6%95%99%E7%A8%8B/">系统封装教程</a>时，为系统高级设置项提供一份具有参考价值的操作手册，让我们对系统有更深入的理解和配置。</p><p>【<strong>注</strong>】：本文只记录了人为修改后的设置项。</p><p>【<strong>建议</strong>】：不必完全按照本文中的操作逐一进行设置，结合自己的实际需求选择适合自己的设置选项。</p><ol><li><p>关闭Windows Defender（组策略-计算机管理-管理模板-Windows组件-Windows Defender-关闭WindowsDefender）</p></li><li><p>关闭Windows防火墙，按需关闭（控制面板-Windows防火墙）</p></li><li><p>设置Superfetch服务，启动类型延迟开启或关闭（Services.msc-Superfetch服务）</p></li></ol><ul><li>持续记录中，有新增变更或修改项请在完成变更后记录到文章中…</li></ul><p><strong>【参考文章】</strong>：<a href="https://zhuanlan.zhihu.com/p/375787564">25项Win10优化设置让Win10系统快速如飞</a></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统</tag>
      
      <tag>Windows</tag>
      
      <tag>教程</tag>
      
      <tag>设置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows系统基础设置</title>
    <link href="/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE/"/>
    <url>/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>【<strong>编写目的</strong>】：为了便于新装系统后以及<a href="https://bluesky0420.github.io/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E5%B0%81%E8%A3%85%E6%95%99%E7%A8%8B/">系统封装教程</a>时，为系统基础设置项提供一份较为完整的设置参考手册，以便我们能更加高效的将系统调整成适合自己使用的状态。</p><p>【<strong>注</strong>】：本文只记录了人为直接或间接修改后的设置项。</p><p>【<strong>建议</strong>】：不必完全按照本文中的操作逐一进行设置，结合自己的实际需求选择适合自己的设置选项。</p><ul><li>持续记录中，有新增变更或修改项请在完成变更后记录到文章中…</li></ul><h2 id="任务栏设置"><a href="#任务栏设置" class="headerlink" title="任务栏设置"></a>任务栏设置</h2><ul><li>仅显示搜索图标（dism++）</li><li>隐藏任务栏上的人脉（dism++）</li><li>任务栏时钟精确到秒（dism++）</li><li>在所有显示器上显示任务栏&amp;将应用显示在打开了窗口的任务栏（系统设置窗口-个性化-任务栏-任务栏行为）</li></ul><h2 id="安全相关设置"><a href="#安全相关设置" class="headerlink" title="安全相关设置"></a>安全相关设置</h2><ul><li>UAC设置为从不通知（dism++ &#x2F; 控制面板-用户账户-用户账户-更改用户账户控制设置）</li><li>开启用于内置管理员账号的管理员批准模式（dism++ &#x2F; 组策略-计算机配置-Windows设置-安全设置-本地策略-安全选项）</li><li>关闭Smartscreen应用筛选器（dism++ &#x2F; Windows安全中心-应用和浏览器控制-基于信誉的保护）</li><li>关闭当前用户和系统打开程序的“安全警告”（dism++ &#x2F; 控制面板-网络和Internet-Internet选项-安全）</li><li>禁用Windows Defender（dism++ &#x2F; 组策略 &#x2F; Windows安全中心）</li><li>开启蓝屏时自动重装功能（dism++）</li></ul><h2 id="开始菜单以及Windows体验设置"><a href="#开始菜单以及Windows体验设置" class="headerlink" title="开始菜单以及Windows体验设置"></a>开始菜单以及Windows体验设置</h2><ul><li>不允许在开始菜单中显示建议（dism++)</li><li>关闭在应用商店中查找关联应用（dism++）</li><li>关闭商店应用推广（dism++）</li><li>关闭锁屏时的Windows聚焦推广（dism++）</li><li>关闭“使用Windows时获取技巧和建议”（dism++）</li><li>关闭“突出显示新安装的程序”（dism++）</li><li>禁止自动安装推荐的应用程序（dism++）</li><li>关闭游戏录制工具（dism++）</li><li>关闭OneDrive（dism++）</li><li>关闭小娜（dism++）</li><li>开始菜单布局选择“更多固定项（系统设置窗口-个性化-开始-布局）</li><li>关闭显示最近添加的应用（系统设置窗口-个性化-开始）</li><li>关闭在“开始”、“跳转列表”和“文件资源管理器”中显示最近打开的项目（系统设置窗口-个性化-开始）</li><li>关闭显示有关提示、快捷方式、新应用等的建议（系统设置窗口-个性化-开始）</li><li>在开始菜单电源按钮旁边显示“设置”按钮（系统设置窗口-个性化-开始）</li></ul><h2 id="资源管理器"><a href="#资源管理器" class="headerlink" title="资源管理器"></a>资源管理器</h2><ul><li>打开资管管理器时显示此电脑（dism++）</li><li>显示所有文件扩展名（dism++）</li><li>shift右键时显示在此处打开命令窗口（dism++）</li><li>创建快捷方式时不添加“快捷方式”文字（dism++）</li><li>禁止自动播放（dism++）</li><li>在单独的进程中打开文件夹窗口（dism++）</li><li>资源管理器最小化时显示完整路径（dism++）</li><li>关闭视频文件预览，提高资源管理器响应速度（dism++）</li><li>关闭音乐文件图片预览，提高资源管理器响应速度（dism++）</li><li>快速访问不显示常用文件夹（dism++）</li><li>快速访问不显示最近使用的文件（dism++）</li><li>显示来自Office.com的文件（资管管理器设置-选项-常规）</li><li>开启始终显示可用性状态（资管管理器设置-选项-查看-导航窗格）</li><li>显示所有文件夹（资管管理器设置-选项-查看-导航窗格）</li><li>展开到打开的文件夹（资管管理器设置-选项-查看-导航窗格）</li><li>使用共享向导（资管管理器设置-选项-查看-文件和文件夹）</li><li>鼠标指向文件夹和桌面项时显示提示信息（资管管理器设置-选项-查看-文件和文件夹）</li><li>显示驱动器号（资管管理器设置-选项-查看-文件和文件夹）</li><li>显示同步提供程序通知（资管管理器设置-选项-查看-文件和文件夹）</li><li>显示状态栏（资管管理器设置-选项-查看-文件和文件夹）</li><li>隐藏空的驱动器（资管管理器设置-选项-查看-文件和文件夹）</li><li>隐藏受保护的操作系统文件（资管管理器设置-选项-查看-文件和文件夹）</li><li>显示隐藏的文件、文件夹和驱动器（资管管理器设置-选项-查看-文件和文件夹）</li><li>隐藏文件合并冲突（资管管理器设置-选项-查看-文件和文件夹）</li><li>在标题栏中显示完整路径（资管管理器设置-选项-查看-文件和文件夹）</li><li>在缩略图上显示文件图标（资管管理器设置-选项-查看-文件和文件夹）</li><li>在文件夹提示中显示文件大小信息（资管管理器设置-选项-查看-文件和文件夹）</li><li>在预览窗格中显示预览控件（资管管理器设置-选项-查看-文件和文件夹）</li></ul><h2 id="桌面图标设置"><a href="#桌面图标设置" class="headerlink" title="桌面图标设置"></a>桌面图标设置</h2><ul><li>在桌面上显示我的电脑、回收站、控制面板（dism++）</li><li>自动排列图标（桌面右键-查看-自动排列图标）</li></ul><h2 id="右键菜单设置"><a href="#右键菜单设置" class="headerlink" title="右键菜单设置"></a>右键菜单设置</h2><ul><li>禁用可执行文件的“兼容性疑难解答”右键菜单（dism++）</li><li>禁用文件、文件夹以及磁盘的“使用Windows Defender扫描”右键菜单（dism++）</li><li>禁用磁盘的“启动BItlocker”右键菜单（dism++）</li><li>禁用磁盘的“以编携式方式打开”右键菜单（dism++）</li><li>禁用新建的“联系人”右键菜单（dism++）</li><li>禁用磁盘的“刻录到光盘”右键菜单（dism++）</li><li>禁用目录、文件夹、所有对象、的“始终脱机可用”右键菜单（dism++）</li><li>禁用文件夹的“固定到快速访问”右键菜单（dism++）</li><li>禁用文件的“OneDrive文件同步“右键菜单（dism++）</li><li>禁用文件、目录、桌面、所有对象的”工作文件夹“右键菜单（dism++）</li><li>禁用文件夹的”包含到库中“右键菜单（dism++）</li></ul><h2 id="系统自带程序设置"><a href="#系统自带程序设置" class="headerlink" title="系统自带程序设置"></a>系统自带程序设置</h2><ul><li>IE浏览器设置（如果有则通过dism++进行针对性设置，不过一般都会在制作母盘时移除IE浏览器，而且IE浏览器已经不在维护，不建议使用）</li><li>Windows Media Player（如果有则设置不显示首次使用对话框，一般会在制作母盘时会移除，推荐使用potplayer等播放器）</li></ul><h2 id="微软输入法设置"><a href="#微软输入法设置" class="headerlink" title="微软输入法设置"></a>微软输入法设置</h2><ul><li>微软拼音默认为英文输入（dism++）</li><li>开机微软拼音云计算（dism++）</li></ul><h2 id="Windows-Update"><a href="#Windows-Update" class="headerlink" title="Windows Update"></a>Windows Update</h2><ul><li>自动安装无需重启的更新（dism++）</li><li>更新挂起时如果有用户登录不自动重启计算机（dism++）</li><li>Windows更新不包括驱动程序（dism++）</li><li>Windows更新不包括恶意软件删除工具（dism++）</li><li>将Windows Update自动更新调整为自动安装更新（dism++）</li></ul><h2 id="记事本"><a href="#记事本" class="headerlink" title="记事本"></a>记事本</h2><ul><li>启动自动换行（dism++）</li><li>始终显示状态栏（dism++）</li></ul><h2 id="服务优化"><a href="#服务优化" class="headerlink" title="服务优化"></a>服务优化</h2><ul><li>禁用远程修改注册表（dism++）</li></ul><h2 id="系统信息以及账号设置"><a href="#系统信息以及账号设置" class="headerlink" title="系统信息以及账号设置"></a>系统信息以及账号设置</h2><ul><li>主机名设置（系统设置窗口-系统-系统信息）</li><li>启用administrator账号并设置密码（控制面板-用户账号）</li></ul><h2 id="显示器设置"><a href="#显示器设置" class="headerlink" title="显示器设置"></a>显示器设置</h2><ul><li>夜间模式开启，设置为50%（系统设置窗口-系统-屏幕）</li><li>缩放比例，设置为125%（系统设置窗口-系统-屏幕）</li><li>调整显示器分辨率为系统最大分辨率（系统设置窗口-系统-屏幕）</li><li>多显示器设置，分辨率、缩放、方向、位置（系统设置窗口-系统-屏幕）</li><li>显示器刷新率，设置为最高刷新率（系统设置窗口-系统-屏幕）</li></ul><h2 id="通知设置"><a href="#通知设置" class="headerlink" title="通知设置"></a>通知设置</h2><ul><li>启用“请勿打扰功能“（系统设置窗格-系统-通知）</li><li>关闭更新后以及登陆后显示Windows欢迎体验以显示新增功能的建议内容（系统设置窗格-系统-通知-其他设置）</li><li>关闭建议我如何充分利用Windows并完成设置此设备（系统设置窗格-系统-通知-其他设置）</li><li>关闭当我使用Windows时获取提示和建议（系统设置窗格-系统-通知-其他设置）</li></ul><h2 id="电源设置"><a href="#电源设置" class="headerlink" title="电源设置"></a>电源设置</h2><ul><li>设置电脑在插入电源时，从不息屏和睡眠（系统设置窗口-系统-电源）</li><li>在使用电池时，闲置5分钟关闭屏幕，闲置15分钟后睡眠（系统设置窗口-系统-电源）</li></ul><h2 id="多任务处理设置"><a href="#多任务处理设置" class="headerlink" title="多任务处理设置"></a>多任务处理设置</h2><ul><li>开启贴靠窗口，并根据实际需求开启或关闭贴靠规则，我这里默认是全开（系统设置窗口-系统-多任务处理-贴靠窗口）</li><li>对齐或按Alt+Tab时显示的标签页选项个数设置为3或5个（系统设置窗口-系统-多任务处理）</li><li>设置标题栏窗口摇动最小化其他窗口（系统设置窗口-系统-多任务处理）</li></ul><h2 id="其他系统设置窗口设置项设置"><a href="#其他系统设置窗口设置项设置" class="headerlink" title="其他系统设置窗口设置项设置"></a>其他系统设置窗口设置项设置</h2><ul><li>启动存储感知功能（系统设置窗口-系统-存储）</li><li>关闭就近共享功能（系统设置窗口-系统-就近共享）</li><li>开启剪贴板历史记录（系统设置窗口-系统-剪贴板）</li></ul><h2 id="控制面板设置"><a href="#控制面板设置" class="headerlink" title="控制面板设置"></a>控制面板设置</h2><p>s</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统</tag>
      
      <tag>Windows</tag>
      
      <tag>教程</tag>
      
      <tag>设置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows系统封装教程</title>
    <link href="/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E5%B0%81%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E5%B0%81%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<ol><li><p>使用Ntlite、dism++等工具制作母盘镜像（提取官方镜像中的wim文件，对系统组件、驱动、服务等进行个性化设置，建议保留安全防护程序Windows Defender）</p></li><li><p>安装VMware workstation（准备部署封装环境）</p></li><li><p>VM中创建虚拟机（普通装机流程，只保留必要硬件，添加PE镜像作为启动设备，开启共享文件夹，设置引导模式为BIOS）</p></li><li><p>设置BIOS（关闭不必要的IO设备，设置启动项）</p></li><li><p>开启虚拟机进入PE，安装VMtools，对硬盘进行分区，将需要安装的镜像和软件拷贝到数据盘（安装VMtools后才能打开共享文件夹，共享文件夹中存放需要安装的系统和软件，分区分为系统盘+数据盘大小根据实际需求，这样就创建了一个基础的安装系统的环境，这个时候可以创建一个快照以便后续安装其他系统，且不互相影响）–创建快照</p></li><li><p>正式安装系统（将系统安装到分区好的系统盘） –创建快照</p></li><li><p>重启虚拟机进入安装系统的OOBE环境，不需要安装VMtools（系统最初的环境）–创建快照</p></li><li><p>激活系统、更新系统、打补丁、根据硬件安装驱动程序（使系统变得更加稳定可靠，一般如无特殊需求直接在联网状态下使用Windows自带的系统更新功能即可，如果系统跨版本更新可能会比较耗时且可能会重启几次，如果系统出现兼容性问题就需要针对出现问题的硬件设备到官网下载对应的官方驱动进行安装）–创建快照</p></li><li><p><a href="https://bluesky0420.github.io/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE/">系统基础设置</a>（按照自己的喜好对系统的设置项、资源管理器、账号、主机名等进行设置，也可以借助dism++等工具对系统进行深入设置，以便调整成自己易于使用的状态）–创建快照</p></li><li><p><a href="https://bluesky0420.github.io/Windows/2024-01-20/windows%E7%B3%BB%E7%BB%9F%E9%AB%98%E7%BA%A7%E8%AE%BE%E7%BD%AE/">系统高级设置</a>（根据自己的实际需求对系统组策略、服务、注册表、防火墙、计划任务、系统配置、控制面板、Windows工具、系统备份、系统更新等进行个性化设置）–创建快照</p></li><li><p>应用程序处理（包括不必要软件的卸载，必要软件的安装、更新、设置，特殊软件的环境变量设置、数据同步，系统可选功能的安装，Windows功能的开启和关闭，桌面图标排列顺序、排列规则调整，任务栏排列顺序调整，并且将所有安装的程序添加到开始菜单，建议就将所有程序安装在系统盘C盘Program files或者Program files(X86)目录下）–创建快照</p></li><li><p>系统优化（优化开机启动项、禁用不必要的服务、调整虚拟内存、配置电源选项、视觉效果设置、后台进程管理）–创建快照</p></li><li><p>系统清理（临时文件清理、磁盘空间清理、磁盘碎片文件整理、注册表清理、垃圾文件清理、空文件夹清理、无用文件及文件夹手动清理、使用dism++空间回收功能清理空间、使用软媒清理大师等其他第三方工具清理垃圾文件）–创建快照</p></li><li><p>在本机运行Easy Sysprep工具，进行第一次封装（确定系统信息是否正确、可以选择一键封装或者设置后封装，封装失败则回退到先前创建的快照重新封装排查出现文件的节点，修改后再次执行封装）–创建快照</p></li><li><p>第一次封装成功后重启电脑进入到PE，运行Easy Sysprep工具进行第二次封装（切记一定要进入到PE中才能进行第二次封装，第二次封装时Easy Sysprep工具的设置项和第一次会有所不同，按照自己的实际需求设置即可）–创建快照</p></li><li><p>转到步骤5初始环境的快照安装封装好的系统，测试是否运行正常</p></li><li><p>在实体机上安装封装好的系统，测试是否运行正常</p></li><li><p>建议按条目记录下所有的操作记录，并分类整理汇总成操作手册，以便下一次直接按照手册执行提高效率减少时间的浪费，并在执行过程中不断完善操作手册</p></li></ol><p><strong>【封装过程中遇到的问题】</strong>：</p><ol><li><p>封装前卸载DevToys、ShellBandizip、powertoys、remove-appxpackage -package 45479liulios.17062D84F7C46_2.8.801.0_x64__p7pnf6hceqser -allusers，否则会导致封装失败.</p></li><li><p>封装失败时可以通过查询日志来分析封装失败的原因，针对性的解决问题，一般来说都是由于一些程序包导致的，通过日志文件查询引起错误的程序包，通过工具卸载或者<code>remove-appxpackage -package &lt;package-fullname&gt; -allusers</code>的方式卸载。</p></li></ol><p><strong>【参考文章】</strong>：<a href="https://www.itsk.com/thread/401140">大白狗的封装札记</a></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>教程</tag>
      
      <tag>运维</tag>
      
      <tag>封装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux</title>
    <link href="/Linux/2024-01-20/arch-linux/"/>
    <url>/Linux/2024-01-20/arch-linux/</url>
    
    <content type="html"><![CDATA[<blockquote><p>[!attention]<br>本文只采用UEFI引导方式进行说明</p></blockquote><h2 id="基础安装"><a href="#基础安装" class="headerlink" title="基础安装"></a>基础安装</h2><ul><li>下载安装映像及相应的GnuPG签名</li><li>制作U盘启动工具（推荐使用Rufus，制作格式为UEFI + GPT）并将签名文件放置在ISO映像文件同一文件夹下</li><li>进入主板的BIOS进行设置<ul><li>将安全启动（secure boot）禁用（disable）</li><li>将启动方式（boot）设置为UEFI模式（UEFI only）</li><li>设置启动项，将Arch 启动U盘放在第一项</li><li>保存重启（F10 Enter Enter）</li></ul></li><li>验证引导模式<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls /sys/firmware/efi/efivars<br>如果显示了目录且没有报错就说明是UEFI模式启动，反之可能就是BIOS或CSM模式引导<br></code></pre></td></tr></table></figure></li><li>连接网络<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">测试网络是否联通：ping baidu.com<br><br>如果网络无法联通则使用：ip link命令检查网卡是否启用<br>state up则表示网卡已开启<br>如果网卡未启用需要使用ip link set 网卡名 up，来启用网卡<br><br>有线网：使用dhcpcd命令配置ip<br>无线网：iwctl#进入交互式命令行<br>device list#列出无线网卡设备名，例如网卡名为wlan0<br>station wlan0 SCAN#扫描无线网<br>station wlan0 getnetwroks#列出无线网<br>station wlan0 connect 无线网名称#连接你想连接的网络，输入密码<br>exit#连接成功后退出<br></code></pre></td></tr></table></figure></li><li>更新系统时间<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">将系统时间和网络时间同步：timedatectl set-ntp true<br>查看服务状态：timedatectl status <br></code></pre></td></tr></table></figure></li><li>建立硬盘分区</li></ul><table><thead><tr><th>分区</th><th>挂载点</th><th>格式</th><th>建议大小</th></tr></thead><tbody><tr><td>efi</td><td>&#x2F;mnt&#x2F;boot&#x2F;efi</td><td>vfat</td><td>300M</td></tr><tr><td>boot</td><td>&#x2F;mnt&#x2F;boot</td><td>ext4</td><td>500M</td></tr><tr><td>根分区</td><td>&#x2F;mnt</td><td>ext4</td><td>100G</td></tr><tr><td>[SWAP]</td><td>——</td><td>swap</td><td>8G左右</td></tr><tr><td>家目录</td><td>&#x2F;mnt&#x2F;home</td><td>xfs</td><td>磁盘剩余空间</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell">查看硬盘状态：lsblk 或者 fdisk -l<br><span class="hljs-meta prompt_">#</span><span class="language-bash">机械硬盘一般是/dev/hdx</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">SATA固态硬盘一般是/dev/sdx</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">NVME固态硬盘一般是/dev/nvmexn1</span><br><br>对硬盘进行分区：fdisk cfdisk<br><span class="hljs-meta prompt_">#</span><span class="language-bash">注意：分区前时都要将磁盘转换为GPT格式</span><br>方法一、通过fdisk命令分区<br>1、fdisk 需分区的磁盘<br>2、g 回车（设置为gpt格式分区） <br>3、n 回车（设置分区的编号1-n） 回车（设置分区的起始位置） 输入分区的大小（+/-sizeKMGTP）<br>...依次分区直至完成<br>4、w 保存并退出<br>常用选项介绍：<br>m#帮助<br>g#转化为GPT格式，常见于UEFI启动<br>o#转化为dos格式，常见于LEGACY启动<br>n#新建分区<br>d#删除分区<br>w#保存数据并退出<br>q#退出但不保存<br><br>方法二、通过cfdisk分区cfdisk 需分区的磁盘<br>1、将磁盘转换为GPT格式<br>parted /dev/sdx             #执行parted，进入交互式命令行，进行磁盘类型变更<br>(parted)mktable             #输入mktable<br>New disk label type? gpt    #输入gpt 将磁盘类型转换为gpt 如磁盘有数据会警告，输入yes即可<br>quit                        #最后quit退出parted命令行交互<br>2、cfdisk 需分区的磁盘<br>选中需要分区的磁盘并选中new 回车（输入分区大小）回车<br>...依次分区直至完成<br>分区完成后选中write保存退出<br>常用选项介绍：<br>new#新建分区<br>quit#退出<br>help#帮助<br>write#写入（保存）<br>delete#删除<br>resize#重新分配大小<br>type#磁盘类型<br></code></pre></td></tr></table></figure><ul><li>格式化分区<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkfs.vfat /dev/sda1#格式化efi分区<br>mkfs.ext4 /dev/sda2#格式化boot分区<br>mkfs.ext4 /dev/sda3#格式化根分区<br>mkfs.xfs /dev/sda5#格式化home分区<br>mkswap /dev/sda4#设置swap分区<br>swapon /dev/sda4#激活swap分区<br></code></pre></td></tr></table></figure></li><li>挂载分区<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">mount /dev/sda3 /mnt#挂载根分区<br>mkdir /mnt/boot#创建boot文件夹<br>mount /dev/sda2 /mnt/boot#挂载boot分区<br>mkdir /mnt/boot/efi#创建efi文件夹<br>mount  /dev/sda1 /mnt/boot/efi#挂载efi分区<br>mkdir /mnt/home#创建home文件夹<br>mount /dev/sda4 /mnt/home#挂载home分区<br></code></pre></td></tr></table></figure></li><li>设置镜像源<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">/etc/pacman.d/mirrorlist#定义了软件包的下载源，越靠前优先级越高<br>vim /etc/pacman.d/mirrorlist#将国内下载速度快的放在最前面<br>pacman -Syyu#更新镜像源和软件包<br></code></pre></td></tr></table></figure></li><li>安装必要软件包<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">安装必须的基础包：pacstrap -i /mnt base base-devel linux linux-headers linux-firmware #base-devel在AUR包的安装是必须的<br>安装必要的软件包：pacstrap -i /mnt vim nano dhcp dhcpcd NetworkManager iwd bash-completion#编辑工具 网络工具 自动补全工具<br></code></pre></td></tr></table></figure></li><li>配置fstab<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">生成fstab文件：genfstab -U /mnt &gt;&gt; /mnt/etc/fstab<br>查看配置文件是否生成：cat /mnt/etc/fstab<br></code></pre></td></tr></table></figure></li><li>切换到新系统<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">arch-chroot /mnt/<br></code></pre></td></tr></table></figure></li><li>设置时区<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -sf /usr/share/zoneinfo/Region（地区名）/City（城市名） /etc/localtime#设置时区<br>hwclock --systohc#设置硬件时间<br></code></pre></td></tr></table></figure></li><li>本地化Locale设置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">Locale的作用：程序和库如果需要本地化文本，都依赖Locale，它明确规定了地域，货币，时区日期格式，字符排列方式和其他本地化标准。<br>相关配置文件：/etc/locale.gen /etc/locale.conf<br>设置系统文字：vim /etc/locale.gen 去掉en_US.UTF-8 和 zh_CN.UTF-8的注释<br>编译本地定义文件：locale-gen<br>向/etc/locale.conf导入内容：echo &#x27;LANG=en_US.UTF-8&#x27; &gt; /etc/locale.conf 或者 直接编辑/etc/locale.conf<br>注意：不设置中文的原因是因为tty环境下可能会出现中文乱码，安装桌面时会安装中文字体并修改相关内容<br></code></pre></td></tr></table></figure></li><li>设置主机名<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">创建并编辑hostname文件：vim /etc/hostname 键入你想设置的主机名字符，例如myhostname<br>将对应的信息添加到hosts中：vim /etc/hosts<br>127.0.0.1localhost<br>::1localhost<br>127.0.1.1myhostname.localdomainmyhostname # 主机名.本地域名 主机名（只键入主机名即可）<br></code></pre></td></tr></table></figure></li><li>为root用户设置密码<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">passwd（因为当前用户已是root用户） / passwd root<br>输入密码 → 确认密码<br>ok<br></code></pre></td></tr></table></figure></li><li>安装微码<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">安装微码的作用：修复 bug 或者使用补丁来防范 bug<br>Intel CPU安装：pacman -S intel-ucode   #Intel<br>AMD CPU安装：pacman -S amd-ucode     #AMD<br></code></pre></td></tr></table></figure></li><li>安装引导程序<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">安装grub启动必要的软件包：pacman -S dosfstools grub efibootmgr   #grub是启动引导器，efibootmgr被 grub 脚本用来将启动项写入 NVRAM。<br>通过grub脚本将引导信息写入efi文件中：grub-install --target=x86_64-efi --efi-directory=/boot/efi --recheck<br>编辑/etc/default/grub文件：vim /etc/default/grub，去掉GRUB_CMDLINE_LINUX_DEFAULT一行中最后的 quiet 参数，同时把 log level 的数值从 3 改成 5。这样是为了后续如果出现系统错误，方便排错。同时在同一行加入 nowatchdog 参数，这可以显著提高开关机速度。<br>生成GRUB所需的配置文件：grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure></li><li>用户设置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">添加用户：useradd -m -g users -G wheel -s /bin/bash username<br>为用户设置密码：passwd username<br>为用户添加sudo权限：vim /etc/sudoers <br>root ALL=(ALL) ALL<br>username ALL=(ALL) ALL#添加该文本后即可使用sudo命令<br>附加说明：<br>1.可以将配置文件中的#%wheel ALL=(ALL) ALL 注释&quot;#&quot;去掉，%wheel 代表是 wheel 组，百分号是前缀 ALL= 代表在所有主机上都生效 (ALL) 代表可以成为任意目标用户 ALL 代表可以执行任意命令<br>2.还可以可以追加Defaults env_reset,pwfeedback文本，该文本的作用是在用户输入密码时显示为*号<br>注意：保存退出时要使用x!或者wq!，因为该文本是一个只读文件<br></code></pre></td></tr></table></figure></li><li>退出并进入已安装的系统<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">exit #退出该系统<br>umount -R /mnt#卸载新分区<br>reboot#重启系统，重启系统后即可拔掉U盘<br></code></pre></td></tr></table></figure></li></ul><h2 id="桌面环境和基础配置"><a href="#桌面环境和基础配置" class="headerlink" title="桌面环境和基础配置"></a>桌面环境和基础配置</h2><ul><li>连接网络<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">连接网络：dhcpcd（只适用于有线网络） or iwd（只适用于无线网络） or NetworkManager（可以管理有线网络和无线网络，和iwd会产生冲突）<br>测试网络联通性：ping baidu.com<br>启动dhcpcd服务：sudo systemctl start dhcpcd<br>设置dhcpcd开机自启：sudo systemctl enable --now dhcpcd<br>关闭iwd服务：sudo systemctl stop iwd#关闭iwd服务，iwd服务是连接wifi的一种方案<br>立即关闭iwd服务开机自启：sudo systemctl disable --now iwd#确保iwd开机处于关闭状态，其无线连接会与NetworkManager冲突<br>立即启动NetworkManager服务：sudo systemctl enable --now NetworkManager#确保先启动NetworkManager，并进行网络连接 若iwd已经与NetworkManager冲突 则执行完上一步在重新启动服务即可，或者重启电脑在启动服务即可。<br></code></pre></td></tr></table></figure></li><li>开启32位支持库<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">开启 32 位支持库：vim /etc/pacman.conf，去掉[multilib]一节中两行的注释<br>[multilib]<br>Include = /etc/pacman.d/mirrorlist<br>刷新pacman软件库：pacman -Syyu<br>重启电脑：reboot<br></code></pre></td></tr></table></figure></li><li>安装驱动<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">英特尔核芯显卡：sudo pacman -S mesa lib32-mesa vulkan-intel lib32-vulkan-intel<br>AMD 核芯显卡：sudo pacman -S mesa lib32-mesa xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon libva-mesa-driver lib32-libva-mesa-driver mesa-vdpau lib32-mesa-vdpau<br>英伟达独立显卡：sudo pacman -S nvidia nvidia-settings lib32-nvidia-utils #适用于较新型号的显卡<br>英伟达独立显卡-GeForce 630 以上到 GeForce 920 以下的老卡：yay -S nvidia-470xx-dkms nvidia-settings lib32-nvidia-470xx-utils linux-headers<br>英伟达独立显卡-GeForce 630 以下到 GeForce 400 系列的老卡：yay -S nvidia-390xx-dkms nvidia-settings lib32-nvidia-390xx-utils linux-headers<br>再老的显卡直接使用开源驱动：sudo pacman -S mesa lib32-mesa xf86-video-nouveau<br>笔记本触摸板驱动：sudo pacman -S xf86-input-synaptics #笔记本专用，台式机可以忽略（如果有外置触摸板也可以安装这个驱动）<br>蓝牙驱动：sudo pacman -S bluez bluez-utils<br></code></pre></td></tr></table></figure></li><li>安装KDE桌面环境<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">安装x窗口系统：sudo pacman -S xorg<br>安装kde全家桶：sudo pacman -S plasma plasma-nm plasma-meta kde-applications konsole dolphin<br>启动sddm服务：sudo systemctl enable --now sddm（--now表示立即启动，直接进入kde桌面，也可已选择重启）<br></code></pre></td></tr></table></figure></li><li>安装基础软件包<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S ntfs-3g                                              #识别NTFS格式的硬盘<br>sudo pacman -S adobe-source-han-serif-cn-fonts wqy-zenhei        #安装几个开源中文字体 一般装上文泉驿就能解决大多wine应用中文方块的问题<br>sudo pacman -S noto-fonts-cjk noto-fonts-emoji noto-fonts-extra#安装谷歌开源字体及表情<br>sudo pacman -S firefox chromium                                     #安装常用的火狐、谷歌浏览器<br>sudo pacman -S ark                                                  #与dolphin同用右键解压<br>sudo pacman -S p7zip unrar unarchiver lzop lrzip                    #安装ark可选依赖<br>sudo pacman -S packagekit-qt5 packagekit appstream-qt appstream     #确保Discover(软件中心）可用 需重启<br>sudo pacman -S gwenview                                             #图片查看器<br>sudo pacman -S git wget kate                                        #git wget kate<br></code></pre></td></tr></table></figure></li><li>将系统语言设置为中文<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">System Settings &gt; Regional Settings &gt; Language -&gt; Add languages 中选择中文加入，再拖拽到第一位，Apply。<br>System Settings &gt; Regional Settings &gt; Formats 中的值设为中文-简体中文(zh_CN)<br>重启机器：reboot<br></code></pre></td></tr></table></figure></li><li>添加archlinuxcn源<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">编辑/etc/pacman.conf文件：vim /etc/pacman.conf，并在末尾追加以下内容<br><br>[archlinuxcn]<br>SigLevel = TrustAll<br>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch<br>刷新软件库：sudo pacman -Syyu<br>安装archlinuxcn密钥环：sudo pacman -S archlinuxcn-keyring<br></code></pre></td></tr></table></figure></li><li>安装yay<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">有archlinuxcn源：sudo pacman -S yay<br><br>无archlinuxcn源：<br>1.使用wget工具<br>wget https://archlinuxstudio.github.io/ArchLinuxTutorial/res/yay-bin-11.1.0-1-x86_64.pkg.tar.zst<br>sudo pacman -U yay-bin-11.1.0-1-x86_64.pkg.tar.zst<br>2.使用git工具<br>git clone https://aur.archlinux.org/yay.git<br>cd yay<br>makepkg -si<br>sudo pacman -U yay*.tar.zst<br><br>说明：AUR 为 archlinux user repository。任何用户都可以上传自己制作的 AUR 包，这也是 Arch Linux 可用软件众多的原因。由于任何人都可上传，也存在对应的风险，一般选用大众认可的包即可。<br></code></pre></td></tr></table></figure></li><li>安装输入法<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">安装软件包：<br>sudo pacman -S fcitx5-im #基础包组<br>sudo pacman -S fcitx5-chinese-addons #官方中文输入引擎<br>sudo pacman -S fcitx5-pinyin-zhwiki #中文维基百科词库<br>sudo pacman -S fcitx5-material-color #主题<br><br>设置环境变量：sudo vim /etc/environment，添加如下内容<br>GTK_IM_MODULE=fcitx<br>QT_IM_MODULE=fcitx<br>XMODIFIERS=@im=fcitx<br>SDL_IM_MODULE=fcitx<br><br>其他设置：<br>系统设置 &gt; 区域设置 &gt; _输入法_，先点击运行Fcitx即可，拼音为默认添加项，同时还可以按自己需求添加，如五笔输入等。<br>点击 拼音 右侧的配置按钮，点选云拼音和在程序中显示预编辑文本 最后应用。<br>回到输入法设置，点击配置附加组件，找到 经典用户界面 在主题里选择一个你喜欢的颜色 最后应用。<br>注销，重新登陆，就可以发现已经可以在各个软件中输入中文了<br></code></pre></td></tr></table></figure></li><li>配置系统默认编辑器<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">编辑profile文件：vim /etc/profile，添加如下内容<br>export EDITOR=&#x27;vim&#x27;<br><br>注意：可以修改为其他编辑器，例如neovim，建议使用vim<br></code></pre></td></tr></table></figure></li><li>启用蓝牙<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">设置蓝牙开机自启：sudo systemctl enable --now bluetooth<br><br>注意：如果要连接蓝牙音频设备，需要安装 pulseaudio-bluetooth 并重启 pulseaudio<br>sudo pacman -S pulseaudio-bluetooth<br>pulseaudio -k<br></code></pre></td></tr></table></figure></li><li>安装blackarch工具包（按需安装）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">编辑/etc/pacman.conf：vim /etc/pacman.conf,添加blackarch软件源并添加以下内容<br>[blackarch]<br>SigLevel = Never<br>Server = https://mirrors.tuna.tsinghua.edu.cn/blackarch/$repo/os/$arch<br><br>安装blackarch密钥环：sudo pacman -S blackarch-keyring<br>更改blackarch软件源：sudo vim /etc/pacman.conf，将SigLevel的参数Never改为TrustAll<br>刷新软件源：sudo pacman -Syyu<br>安装渗透工具：sudo pacman -S blackarch<br></code></pre></td></tr></table></figure></li></ul><h2 id="系统美化"><a href="#系统美化" class="headerlink" title="系统美化"></a>系统美化</h2><ul><li>壁纸</li><li>系统主题</li><li>窗口装饰</li><li>系统图标</li><li>sddm主题</li><li>欢迎屏幕</li><li>桌面插件</li><li>混成器</li><li>终端样式设置</li><li>Kvantum Manager</li><li>GRUB 主题</li><li>开机动画</li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Arch</tag>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux基础使用</title>
    <link href="/Linux/2024-01-20/linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/Linux/2024-01-20/linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux基础使用"><a href="#Linux基础使用" class="headerlink" title="Linux基础使用"></a>Linux基础使用</h1><h2 id="第一章、Linux介绍、虚拟机安装使用"><a href="#第一章、Linux介绍、虚拟机安装使用" class="headerlink" title="第一章、Linux介绍、虚拟机安装使用"></a>第一章、Linux介绍、虚拟机安装使用</h2><h2 id="一、Linux介绍"><a href="#一、Linux介绍" class="headerlink" title="一、Linux介绍"></a>一、Linux介绍</h2><h4 id="（一）计算机资源"><a href="#（一）计算机资源" class="headerlink" title="（一）计算机资源"></a>（一）计算机资源</h4><ul><li><strong>硬件资源</strong>：计算机的物理设备（CPU、GPU、磁盘……）</li><li><strong>软件资源</strong>：操作系统[内核空间]（特殊的软件资源），应用程序[用户空间]（根据特定的需求，使用计算机语言编写的程序，未启动的时候是一堆静态文件，保存在磁盘中，使用的时候从磁盘调入内存中）</li></ul><h4 id="（二）常见操作系统"><a href="#（二）常见操作系统" class="headerlink" title="（二）常见操作系统"></a>（二）常见操作系统</h4><ul><li><strong>Unix</strong>：多用户多任务的操作系统，支持多种架构</li><li><strong>Linux</strong>：多用于服务器，开源</li><li><strong>Windows</strong>：分个人用户[win7&#x2F;8&#x2F;10&#x2F;xp]（个人计算机）和企业用户[Windows server2008&#x2F;2012&#x2F;2016&#x2F;2019]（服务器）</li><li><strong>MacOS</strong>：苹果系统，底层实现良好，半开源</li><li><strong>IOS</strong>：苹果手机系统</li><li><strong>Android</strong>：安卓系统，Linux系统的分支</li></ul><h4 id="（三）Linux简单介绍"><a href="#（三）Linux简单介绍" class="headerlink" title="（三）Linux简单介绍"></a>（三）Linux简单介绍</h4><ul><li><strong>Linux特点</strong><ul><li><strong>开源</strong>：Linux系统遵顼GPL协议，开放源代码</li><li><strong>安全高效稳定</strong>：Linux用户权限管理严格</li><li><strong>多用户多任务</strong>：Linux是一款多用户多任务实时性的操作系统</li><li><strong>兼容性良好支持多种硬件平台</strong>：Linux系统遵循posix协议，支持Unix环境下运行的软件移植到Linux环境。</li></ul></li><li>Linux发行版<ul><li>Redhat（企业）</li><li>CentOS（社区，国内用的最多，即将停止维护）</li><li>Fedora</li><li>SUSE</li><li>Ubuntu</li><li>Kali（社区，多用于安全相关方向，包含了很多专业的渗透测试和安全审计工具）</li><li>ArchLinux（社区，衍生版本Manjaro Linux，滚动发行）</li><li>…</li></ul></li><li>开源文化<ul><li><strong>GNU</strong>：一个自由软件项目工程，目的是为了创建一套完全自由（开源）的操作系统</li><li><strong>GPL</strong>：GNU通用许可证，拥有该协议的程序是开源的，任何人可以根据源码进行修改，但经修改的代码也必须开源提供给任何人，但请记住开源 ≠ 免费&amp;免费 ≠ 开源。</li><li><strong>Linux</strong>：准确来说是Linux内核，Linux内核+GNU软件&#x3D;GNU&#x2F;Linux系统才是我们平时说的Linux系统</li></ul></li></ul><h3 id="二、虚拟机安装使用"><a href="#二、虚拟机安装使用" class="headerlink" title="二、虚拟机安装使用"></a>二、虚拟机安装使用</h3><h4 id="（一）虚拟机介绍"><a href="#（一）虚拟机介绍" class="headerlink" title="（一）虚拟机介绍"></a>（一）虚拟机介绍</h4><ul><li>虚拟机：根据当前主机虚拟出一台虚拟主机</li><li>虚拟机架构<ul><li>原生架构：主机 → 虚拟机操作系统 → 操作系统(多台)</li><li>寄居架构：主机 → 操作系统 → 虚拟机软件 → 操作系统(多台)</li></ul></li></ul><h4 id="（二）常用虚拟机软件"><a href="#（二）常用虚拟机软件" class="headerlink" title="（二）常用虚拟机软件"></a>（二）常用虚拟机软件</h4><ul><li>VMware workstation（付费）</li><li>VitualBox（免费）</li></ul><h4 id="（三）VMware-workstation安装"><a href="#（三）VMware-workstation安装" class="headerlink" title="（三）VMware workstation安装"></a>（三）VMware workstation安装</h4><ul><li>官方链接：<a href="https://www.vmware.com/go/getworkstation-win">点击下载</a></li><li>软件安装激活步骤<br><img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%85%E5%8C%85.4bpysgygnn20.webp" alt="Linux基础使用-VMware安装包"><br> <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%851.bn9ydo4tgeg.webp" alt="Linux基础使用-VMware安装1"><br> <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%852.3xijliczpru0.webp" alt="Linux基础使用-VMware安装2"><br> <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%853.rgast5z8ggg.webp" alt="Linux基础使用-VMware安装3"><br>  <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%854.7u7q5y8kfo4.webp" alt="Linux基础使用-VMware安装4"><br>  <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%855.hjgsj00b1i8.webp" alt="Linux基础使用-VMware安装5"><br>  <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%856.7fh0b9qpo7g0.webp" alt="Linux基础使用-VMware安装6"><br>  <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%857.6r7msc9zt000.webp" alt="Linux基础使用-VMware安装7"><br>  <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E5%AE%89%E8%A3%858.4xzyemefz5c0.webp" alt="Linux基础使用-VMware安装8"></li><li>软件激活码：购买或者网上查询，建议购买。<br>  <img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E6%BF%80%E6%B4%BB.6x8uekdfhfo0.webp" alt="Linux基础使用-VMware激活"></li></ul><h4 id="（四）VMware-workstation常用设置"><a href="#（四）VMware-workstation常用设置" class="headerlink" title="（四）VMware workstation常用设置"></a>（四）VMware workstation常用设置</h4><p><img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E8%AE%BE%E7%BD%AE-%E6%96%87%E4%BB%B6%E5%AD%98%E6%94%BE%E8%B7%AF%E5%BE%84.eiuzeyagtrc.webp" alt="Linux基础使用-VMware设置-文件存放路径"><br><img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E8%AE%BE%E7%BD%AE-%E6%9B%B4%E6%96%B0%E6%A3%80%E6%9F%A5.74pct9fcy6c0.webp" alt="Linux基础使用-VMware设置-更新检查"><br><img src="https://github.com/bluesky0420/picx-images-hosting/raw/master/Linux%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8-VMware%E8%AE%BE%E7%BD%AE-%E4%BD%93%E9%AA%8C%E8%AE%A1%E5%88%92.1fcz24t7wxi8.webp" alt="Linux基础使用-VMware设置-体验计划"></p><ul><li>其他设置按默认即可</li></ul><h4 id="（五）虚拟机安装红帽系统"><a href="#（五）虚拟机安装红帽系统" class="headerlink" title="（五）虚拟机安装红帽系统"></a>（五）虚拟机安装红帽系统</h4><ul><li>准备rhel8镜像文件<ul><li>下载链接：<a href="https://developers.redhat.com/products/rhel/download">红帽官网</a>，需要在红帽官网注册个人账号</li></ul></li><li>虚拟机安装红帽系统</li></ul><h4 id="（六）虚拟机创建快照"><a href="#（六）虚拟机创建快照" class="headerlink" title="（六）虚拟机创建快照"></a>（六）虚拟机创建快照</h4><h4 id="（七）虚拟机克隆"><a href="#（七）虚拟机克隆" class="headerlink" title="（七）虚拟机克隆"></a>（七）虚拟机克隆</h4><ul><li>克隆链接</li><li>完全克隆</li></ul><h2 id="第二章、Linux桌面环境、文件系统"><a href="#第二章、Linux桌面环境、文件系统" class="headerlink" title="第二章、Linux桌面环境、文件系统"></a>第二章、Linux桌面环境、文件系统</h2><h3 id="一、Linux桌面环境"><a href="#一、Linux桌面环境" class="headerlink" title="一、Linux桌面环境"></a>一、Linux桌面环境</h3><ul><li>设置桌面快捷键</li><li>设置终端（字体、颜色、快捷键）</li></ul><h3 id="二、Linux文件系统"><a href="#二、Linux文件系统" class="headerlink" title="二、Linux文件系统"></a>二、Linux文件系统</h3><table><thead><tr><th>目录</th><th>用途</th></tr></thead><tbody><tr><td>&#x2F;</td><td>Linux根目录是所有文件夹的最上一级</td></tr><tr><td>&#x2F;root</td><td>root用户目录相当于Windows系统上的administrator用户目录</td></tr><tr><td>&#x2F;home</td><td>除root用户的家目录</td></tr><tr><td>&#x2F;dev</td><td>设备文件目录</td></tr><tr><td>&#x2F;boot</td><td>开机和启动项</td></tr><tr><td>&#x2F;mnt</td><td>手动挂载文件挂载点</td></tr><tr><td>&#x2F;media</td><td>移动设备挂载文件挂载点</td></tr><tr><td>&#x2F;etc</td><td>配置文件</td></tr><tr><td>&#x2F;bin</td><td>普通用户命令目录：&#x2F;bin → &#x2F;usr&#x2F;bin 软连接</td></tr><tr><td>&#x2F;sbin</td><td>超级用户命令目录：&#x2F;sbin→&#x2F;usr&#x2F;sbin 软连接</td></tr><tr><td>&#x2F;usr</td><td>第三方源码软件包存放目录</td></tr><tr><td>&#x2F;opt</td><td>第三方协力软件存放目录</td></tr><tr><td>&#x2F;proc</td><td>虚拟文件系统</td></tr><tr><td>&#x2F;run</td><td>程序运行相关的存放目录</td></tr><tr><td>&#x2F;var</td><td>可变的数据文件、日志文件存放目录</td></tr><tr><td>&#x2F;sys</td><td>正在运行的系统内核信息映射</td></tr><tr><td>&#x2F;srv</td><td>service的缩写，一些服务启动后需要提取的数据</td></tr><tr><td>&#x2F;tmp</td><td>临时文件存放目录</td></tr><tr><td>&#x2F;lib</td><td>软连接、库文件</td></tr><tr><td>&#x2F;lib64</td><td>软连接、库文件</td></tr></tbody></table><h2 id="第三章、Linux基础操作"><a href="#第三章、Linux基础操作" class="headerlink" title="第三章、Linux基础操作"></a>第三章、Linux基础操作</h2><h3 id="一、关机重启命令"><a href="#一、关机重启命令" class="headerlink" title="一、关机重启命令"></a>一、关机重启命令</h3><h4 id="（一）关机命令（shutdown，init）"><a href="#（一）关机命令（shutdown，init）" class="headerlink" title="（一）关机命令（shutdown，init）"></a>（一）关机命令（shutdown，init）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">init 0<br>shutdown -h now（立即关机）<br>shutdown -h 60（60分钟后关机）<br></code></pre></td></tr></table></figure><h4 id="（二）重启命令（reboot，shutdown）"><a href="#（二）重启命令（reboot，shutdown）" class="headerlink" title="（二）重启命令（reboot，shutdown）"></a>（二）重启命令（reboot，shutdown）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">reboot<br>shutdown -r now（立即重启）<br>shutdown -r 60（60分钟后重启）<br></code></pre></td></tr></table></figure><h4 id="（三）取消关机重启命令"><a href="#（三）取消关机重启命令" class="headerlink" title="（三）取消关机重启命令"></a>（三）取消关机重启命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">shutdown -c（取消重启关机）<br></code></pre></td></tr></table></figure><h3 id="二、帮助命令"><a href="#二、帮助命令" class="headerlink" title="二、帮助命令"></a>二、帮助命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、type 命令（查看命令类型）<br>2、help 命令（内置命令） or 命令 --help（外来命令）<br>3、info 命令（命令的信息，help命令的补充）<br>4、man 命令（查看命令的man手册）<br>5、man man（查看man命令的man手册）<br>6、man n 命令（按章节查看man手册，每一章都有不同的含义，n[1-9]）<br></code></pre></td></tr></table></figure><h3 id="三、文件基础操作"><a href="#三、文件基础操作" class="headerlink" title="三、文件基础操作"></a>三、文件基础操作</h3><ul><li>知识铺垫（Linux的理念：Linux下一切皆文件）<ul><li><strong>路径</strong><ul><li><strong>绝对路径</strong>：从根目录开始定位到目标目录，表示方法为：&#x2F;usr&#x2F;local&#x2F;</li><li><strong>相对路径</strong>：从当前目录开始定位到目标目录，表示方法为：.&#x2F;（当前目录） ..&#x2F;（上级目录）</li></ul></li><li><strong>终端</strong>：执行命令的载体</li><li><strong>shell命令解释器</strong>：&#x3D;&#x3D;将&#x3D;&#x3D;终端中的&#x3D;&#x3D;命令&#x3D;&#x3D;通过&#x3D;&#x3D;解释&#x3D;&#x3D;，&#x3D;&#x3D;翻译&#x3D;&#x3D;成&#x3D;&#x3D;计算机&#x3D;&#x3D;能&#x3D;&#x3D;理解&#x3D;&#x3D;的&#x3D;&#x3D;指令&#x3D;&#x3D;，当命令输入错误时shell解释器会在终端中报错，CentOS&#x2F;RadHat的shell解释器叫bash</li><li><strong>终端命令格式</strong>：命令 [选项] 参数<ul><li><strong>命令</strong>：命令的主体</li><li><strong>选项</strong>：影响命令的行为</li><li><strong>参数</strong>：命令作用的对象</li></ul></li><li><strong>文件类型</strong><ul><li>c（字符设备）输入输出设备</li><li>b（块文件）设备文件</li><li>d（目录文件）目录文件</li><li>f&#x2F;-（普通文件）普通文件</li><li>l（链接文件）软连接</li><li>p（管道文件）</li><li>s（套接字文件）</li></ul></li><li>文件操作基础命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs shell">查看文件类型：file<br>file 文件<br>显示当前路径：pwd<br>pwd<br><br>切换工作目录：cd<br>cd 切换到root目录<br>cd - 切换到上一工作目录<br>cd ./ 切换到当前目录下<br>cd ../ 切换到上衣目录<br><br>列出目录内容：ls<br>ls -a 列出所有文件包括隐藏文件<br>ls -l 以列表的形式列出文件<br>ls -h 以人性的方式列出文件及目录<br>ls -r 逆序排序的方式列出文件及目录<br>ls -d 按文件名<br>ls -m 按分隔符<br>ls -R 递归显示<br>ls -S 按文件大小显示<br>ls -t 按文件时间显示<br>注意：选项可以按需求组合<br><br>创建目录：mkdir<br>mkdir 目录<br>mkdir 目录，目录<br>mkdir -p 多级目录<br><br>移除目录：rmdir<br>rmdir 目录<br><br>创建文件、修改文件日期：touch<br>1、创建文件<br>touch file <br>touch file&#123;1..3&#125;（创建多个文件）<br>2、修改文件日期<br>stat file（查看文件详细信息）<br>touch -a file -t &quot;&quot;（修改文件访问日期）<br>touch -m file -t &quot;&quot;（修改文件修改日期）<br>touch -d &quot;&quot; file（修改文件日期）<br><br>查看文件内容：cat/tac，more/less，head/tail，ldd<br>cat/tac file（查看小文件，cat正序，tac倒序）<br>more/less file（查看大文件）<br>head file（查看文件前10行）head -n 15 file or head -15 file（查看文件前15行）<br>tail（查看文件后10行）tail -n 15 file or tail -15 file（查看文件后15行）<br>ldd /usr/bin/ls （查看二进制文件的命令）<br><br>移动文件、重命名文件：mv<br>1、移动文件（不同目录）<br>mv /tmp/time.log /root/<br>2、重命名文件（同一目录）<br>mv /root/time.log /root/file.log<br><br>拷贝文件、目录：cp<br>cp -r （拷贝目录）<br>cp -v （显示拷贝内容）<br>cp -p （拷贝文件并拷贝文件权限）<br>cp -a （拷贝目录及权限=cp -pr）<br>注意：选项可以按需求组合<br><br>删除目录、文件：rm<br>rm -r（递归删除，删除目录，提示是否删除）<br>rm -v（显示删除内容）<br>rm -f（直接删除，不提示）<br>注意：该命令很危险，要注意使用方式<br></code></pre></td></tr></table></figure><strong>注意：使用命令前一定要明白的三件事：&#x3D;&#x3D;我是谁&#x3D;&#x3D;（当前账户）&#x3D;&#x3D;我在哪儿&#x3D;&#x3D;（当前工作路径）&#x3D;&#x3D;我在干什么&#x3D;&#x3D;（我在进行什么操作）</strong></li></ul></li></ul><h3 id="四、bash标准输入"><a href="#四、bash标准输入" class="headerlink" title="四、bash标准输入"></a>四、bash标准输入</h3><h4 id="（一）名词解释"><a href="#（一）名词解释" class="headerlink" title="（一）名词解释"></a>（一）名词解释</h4><ul><li>标准输入：键盘上的输入 文件描述符：0</li><li>标准输出：屏幕中正确的输出 文件描述符：1</li><li>标准错误：屏幕中错误的输出 文件描述符：2</li></ul><h4 id="（二）相关符号"><a href="#（二）相关符号" class="headerlink" title="（二）相关符号"></a>（二）相关符号</h4><ul><li>&gt; 标准输出覆盖重定向</li><li>2&gt; 标准错误重定向</li><li>&gt; &gt; 追加重定向，默认是标准输入的重定向追加</li><li>2&gt;&gt; 标准错误的重定向追加</li><li>&amp;&gt; 标准输出，标准错误的重定向追加</li></ul><h3 id="五、重定向"><a href="#五、重定向" class="headerlink" title="五、重定向"></a>五、重定向</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、在/tmp/目录下创建一个可执行文件1.sh和1.log日志文件：touch /tmp/1.sh<br>2、将&#x27;hostname\nhello&#x27;写入1.sh可执行文件中：echo -e &#x27;hostname\nhello&#x27; &gt; 1.sh<br>3、将1.sh标准输出重定向到1.log日志文件：./1.sh &gt; 1.log<br>4、将1.sh标准错误重定向到1.log日志文件中：./1.sh 2&gt; 1.log<br>5、将1.sh标准输出和标准错误一起重定向到1.log日志文件中：./1.sh &amp;&gt; 1.log<br>6、将1.sh标准输出追加到1.log文件中：./1.sh &gt;&gt; 1.log <br>7、将1.sh标准错误追加到1.log文件中：./1.sh 2&gt;&gt; 1.log<br>8、将1.sh标准输出和标准错误追加到1.log文件中：./1.sh &amp;&gt;&gt; 1.log <br>/dev/nulllinux系统下特殊的设备文件，空设备，看的见拿不出来<br></code></pre></td></tr></table></figure><h3 id="六、echo命令详解"><a href="#六、echo命令详解" class="headerlink" title="六、echo命令详解"></a>六、echo命令详解</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、echo的作用<br>打印字符串，默认将字符串送往标准输出，默认会打印一个换行符<br>2、echo的用法<br>echo可以和&gt; &gt;&gt; 连用进行文件的创建或内容的增加<br>3、常见选线<br>echo -e&#x27;str\nstr&#x27;解释转义字符\n<br>echo -n &#x27;str&#x27;不打印换行符<br>4、举例说明<br>打印hello：echo hello<br>打印hello不换行：echo -n &#x27;hello&#x27;<br>打印hello\nworld换行：echo -e &#x27;hello\nworld&#x27;<br>将hello重定向到1.txt文件中：echo &#x27;hello&#x27; &gt; 1.txt<br>将world追加到1.txt文件中：echo &#x27;world&#x27; &gt;&gt; 1.txt<br></code></pre></td></tr></table></figure><h2 id="第四章、Linux文件查找、打包压缩、时间相关命令"><a href="#第四章、Linux文件查找、打包压缩、时间相关命令" class="headerlink" title="第四章、Linux文件查找、打包压缩、时间相关命令"></a>第四章、Linux文件查找、打包压缩、时间相关命令</h2><h3 id="一、Linux文件查找"><a href="#一、Linux文件查找" class="headerlink" title="一、Linux文件查找"></a>一、Linux文件查找</h3><h4 id="（一）命令查找（which，whereis）"><a href="#（一）命令查找（which，whereis）" class="headerlink" title="（一）命令查找（which，whereis）"></a>（一）命令查找（which，whereis）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、which 命令（查找命令存放位置）<br>2、whereis 命令（查看命令存放位置及其他信息）<br></code></pre></td></tr></table></figure><h4 id="（二）文件查找（find）"><a href="#（二）文件查找（find）" class="headerlink" title="（二）文件查找（find）"></a>（二）文件查找（find）</h4><ul><li>按需求查找文件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">find 路径 [选项] 关键字<br>find --help（查看帮助信息）<br>find 路径 -name &quot;filename&quot;（按名字查找文件，区分大小写）<br>find 路径 -iname &quot;filename&quot;（按名字查找文件，不区分大小写）<br>find 路径 -size +2M（按文件大小查找文件，+2M表示查找所有大于2M和查找文件相匹配的文件）<br>find 路径 -type b（按文件类型查找文件）<br>find 路径 -mtime +2（按文件时间查找文件，+2表示2天以前的所有和查找选项相匹配的文件，-2表示两天内，2表示两天前当天）<br>find 路径 -user username -group groupname （按文件的属主和属组查找文件）<br>注意：选项可以按需求组合<br></code></pre></td></tr></table></figure></li><li>按需求查找文件并执行shell命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">find 路径 [选项] 关键字 命令<br>fing 路径 [选项] 关键字 -ls（列出查询目录列表）<br>fing 路径 [选项] 关键字 -delete（删除查询文件）<br>find 路径 [选项] 关键字 -print(打印查询文件，默认命令，可不写)<br>find 路径 [选项] 关键字 -ok shell命令 &#123;&#125; \;（询问是否执行该命令）<br>find 路径 [选项] 关键字 -exec shell命令 &#123;&#125; \;（不询问直接执行命令）<br>注意：选项可以按需求组合<br></code></pre></td></tr></table></figure></li></ul><h3 id="二、Linux下打包压缩"><a href="#二、Linux下打包压缩" class="headerlink" title="二、Linux下打包压缩"></a>二、Linux下打包压缩</h3><h4 id="（一）Linux下文件打包（tar）"><a href="#（一）Linux下文件打包（tar）" class="headerlink" title="（一）Linux下文件打包（tar）"></a>（一）Linux下文件打包（tar）</h4><ul><li>tar工具介绍：在Linux系统下，某些情况下需要把多个文件或目录整理成一个进行管理，tar可以将多个文件进行打包</li><li>tar工具使用<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar [选项] filename.tar filename<br>tar -c（创建包）<br>tar -v（打包显示详细内容）<br>tar -f（选择打包文件）<br>tar -x（将打包文件进行还原）<br>tar -t（查看打包文件内容）<br>tar -r（追加打包文件，压缩后不能再进行追加）<br>创建包：tar -cvf file.tar file<br>还原包：tar xvf file.tar<br>查看包内容：tar -tf file.tar<br>追加包文件：tar -Pf file.tar -r 1.txt<br></code></pre></td></tr></table></figure></li></ul><h4 id="（二）Linux下压缩工具及其使用（zip、gzip、bzip2、xz）"><a href="#（二）Linux下压缩工具及其使用（zip、gzip、bzip2、xz）" class="headerlink" title="（二）Linux下压缩工具及其使用（zip、gzip、bzip2、xz）"></a>（二）Linux下压缩工具及其使用（zip、gzip、bzip2、xz）</h4><ul><li>Linux下压缩工具介绍</li></ul><table><thead><tr><th>压缩工具</th><th>特点</th><th>解压工具</th></tr></thead><tbody><tr><td>zip</td><td>支持多个文件压缩，兼容Unix和Windows</td><td>unzip</td></tr><tr><td>gzip</td><td>压缩单个文件，压缩率较低，CPU开销小</td><td>gunzip</td></tr><tr><td>bzip2</td><td>压缩单个文件，压缩率高，CPU开销高</td><td>bunzip2</td></tr><tr><td>xz</td><td>压缩单个文件，压缩率高，压缩时间长，解压速度快，CPU开销高</td><td>unxz</td></tr></tbody></table><ul><li>Linux下压缩工具使用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、zip工具压缩及解压<br>压缩：zip -r(显示压缩内容) file.zip file<br>解压：unzip file.zip -d /path(指定解压路径)<br>2、gzip工具压缩及解压<br>压缩：gzip -r(递归压缩目录下所有文件) file.gz file<br>解压：gzip -d file.gz or gunzip file.gz<br>3、bzip2工具压缩及解压<br>压缩：bzip2 -r(递归压缩目录下所有文件) file.bz2 file<br>解压：bzip2 -d file.bz2 or bunzip2 file.bz2<br>4、xz工具压缩及解压<br>压缩：xz -r(递归压缩目录下所有文件) file.xz file<br>解压：xz -d file.xz or unxz file.xz<br></code></pre></td></tr></table></figure><h4 id="（三）Linux下文件打包压缩（tar）"><a href="#（三）Linux下文件打包压缩（tar）" class="headerlink" title="（三）Linux下文件打包压缩（tar）"></a>（三）Linux下文件打包压缩（tar）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、使用gzip工具进行打包压缩并解压<br>打包压缩：tar -zcvf file.tar.gz file<br>解压：tar -zxvf file.tar.gz -C(指定解压目录)<br>2、使用bzip2工具进行打包压缩并解压<br>打包压缩：tar -jcvf file.tar.bz2 file<br>解压：tar -jxvf file.tar.bz2 -C(指定解压目录)<br>3、使用xz工具进行打包压缩并解压<br>打包压缩：tar -Jcvf file.tar.xz file<br>解压：tar -Jxvf file.tar.xz -C(指定解压目录)<br></code></pre></td></tr></table></figure><h3 id="三、时间相关命令"><a href="#三、时间相关命令" class="headerlink" title="三、时间相关命令"></a>三、时间相关命令</h3><h4 id="（一）date（设置系统时间）"><a href="#（一）date（设置系统时间）" class="headerlink" title="（一）date（设置系统时间）"></a>（一）date（设置系统时间）</h4><ul><li><p>查看系统时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、先使用help命令查看date命令的用法<br>date --help<br>2、查看当前时间<br>date [选线] [打印格式]<br>date（打印当前时间）<br>date常用格式：%Y %m %d %F %H %M %S %T %C<br>例如：<br>    ①打印当前系统年份：date +&#x27;%Y-%-%d&#x27; or date +%F<br>    ②打印系统当前时间：date +&#x27;%H-%M-%S&#x27; or date +%T or date +%X<br>    ③打印当前年份+时间：date +&#x27;%Y-%m-%d %H-%M-%S&#x27;date +&#x27;%F %T&#x27; date +&#x27;%F %X&#x27;<br>    ④打印当前系统完整时间：date +&#x27;%c&#x27;<br>    注意点：①按自定义格式和多个格式连用的情况下打印时间需要用(+&#x27;格式选项&#x27;)<br>           ②格式可自定义如用下划线或空格隔开年月日：date +&#x27;%Y_%m_n%&#x27; date +&#x27;%Y%m%d&#x27;<br>           ③打印格式+后面的内容用双引号和单引号都可以<br>3、查看非当前时间<br>date -d [打印格式] or date --date=&#x27;打印时间&#x27; [打印格式]<br>date -d &quot;+3days&quot; [格式] 按格式打印三天前的日期<br>date -d &quot;-3days&quot; [格式] 按格式打印三天后的日期<br>date -d &quot;3days&quot; [格式] 不加加减号默认为加，按格式打印三天前的日期、<br>注意点：<br>    ①+表示前，-表示后<br>    ②不加加减号默认表示加<br>    ③-d选项后需要将要打印的时间放在单引号或者双引号中：-d &quot;+60days&quot; -d &#x27;+60days&#x27;<br></code></pre></td></tr></table></figure></li><li><p>设置系统时间</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">date -s 需设置的时间<br>date -s 20201010（只设置年月日，时分秒会清零：00:00:00）<br>date -s &quot;2020-10-10 10:10:10&quot;<br>date -s &quot;20201010 10:10:10&quot;<br>date -s &quot;10:10:10 2020-10-10&quot;<br>date -s &quot;10:10:10 20201010&quot;<br>注意：<br>    ①只有root用户才能设置系统时间，一般我们不会设置系统时间，而是利用时间同步<br>    ②设置系统时间时，年月日和时分秒没有顺序之分，可以时分秒在前也可以年月日在前，系统会自动匹配<br></code></pre></td></tr></table></figure><ul><li>其他date命令选线</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">%</span><span class="language-bash">%一个文字的 %</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">a当前locale 的星期名缩写(例如： 日，代表星期日)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">A当前locale 的星期名全称 (如：星期日)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">b当前locale 的月名缩写 (如：一，代表一月)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">B当前locale 的月名全称 (如：一月)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">c当前locale 的日期和时间 (如：2005年3月3日 星期四 23:05:25)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">C世纪；比如 %Y，通常为省略当前年份的后两位数字(例如：20)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">d按月计的日期(例如：01)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">D按月计的日期；等于%m/%d/%y</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">e按月计的日期，添加空格，等于%_d</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">F完整日期格式，等价于 %Y-%m-%d</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">gISO-8601 格式年份的最后两位 (参见%G)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">GISO-8601 格式年份 (参见%V)，一般只和 %V 结合使用</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">h等于%b</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">H小时(00-23)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">I小时(00-12)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">j按年计的日期(001-366)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">k   hour, space padded ( 0..23); same as %_H</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">l   hour, space padded ( 1..12); same as %_I</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">m   month (01..12)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">M   minute (00..59)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">n   a newline</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">N   nanoseconds (000000000..999999999)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">p   locale<span class="hljs-string">&#x27;s equivalent of either AM or PM; blank if not known</span></span><br><span class="hljs-meta prompt_">%</span><span class="language-bash"><span class="hljs-string">P   like %p, but lower case</span></span><br><span class="hljs-meta prompt_">%</span><span class="language-bash"><span class="hljs-string">q   quarter of year (1..4)</span></span><br><span class="hljs-meta prompt_">%</span><span class="language-bash"><span class="hljs-string">r   locale&#x27;</span>s 12-hour clock time (e.g., 11:11:04 PM)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">R   24-hour hour and minute; same as %H:%M</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">s   seconds since 1970-01-01 00:00:00 UTC</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">S秒(00-60)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">t输出制表符 Tab</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">T时间，等于%H:%M:%S</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">u星期，1 代表星期一</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">U一年中的第几周，以周日为每星期第一天(00-53)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">VISO-8601 格式规范下的一年中第几周，以周一为每星期第一天(01-53)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">w一星期中的第几日(0-6)，0 代表周一</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">W一年中的第几周，以周一为每星期第一天(00-53)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">x当前locale 下的日期描述 (如：12/31/99)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">X当前locale 下的时间描述 (如：23:13:48)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">y年份最后两位数位 (00-99)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">Y年份</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">z +hhmm数字时区(例如，-0400)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">:z +hh:mm数字时区(例如，-04:00)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">::z +hh:mm:ss数字时区(例如，-04:00:00)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">:::z数字时区带有必要的精度 (例如，-04，+05:30)</span><br><span class="hljs-meta prompt_">%</span><span class="language-bash">Z按字母表排序的时区缩写 (例如，EDT)</span><br></code></pre></td></tr></table></figure><h4 id="（二）hwclock（查看并设置硬件时间）"><a href="#（二）hwclock（查看并设置硬件时间）" class="headerlink" title="（二）hwclock（查看并设置硬件时间）"></a>（二）hwclock（查看并设置硬件时间）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">hwclock --help<br>hwclock查看硬件时间<br>hwclock -l查看本地硬件时间<br>hwclock -u查看utc时区<br>hwclock -s--hctosys系统时间同步硬件时间<br>hwclock -w--systohc硬件时间同步系统时间<br>谁的时间在前就以谁的时间为准.<br>--hctosys<br>--systohc<br></code></pre></td></tr></table></figure><h4 id="（三）timedatectl（设置系统和硬件时间）"><a href="#（三）timedatectl（设置系统和硬件时间）" class="headerlink" title="（三）timedatectl（设置系统和硬件时间）"></a>（三）timedatectl（设置系统和硬件时间）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">timedatectl -h --help<br>timedatectl [选项] 命令<br>timedatectl status查看当前系统硬件时间状态<br>timedatectl show 显示当前系统时间时区硬件时间ntp服务的状态<br>timedatectl set-time TIME 设置系统时间<br>timedatectl list-timezones 列出系统时区<br>timedatectl set-timezones ZONE 设置系统时区<br>timedatectl set-local-rtc BOOL 设置硬件时间是否为本地时间<br>timedatectl set-ntp BOOL 设置时间同步服务是否开启<br></code></pre></td></tr></table></figure><h4 id="（四）cal日历命令"><a href="#（四）cal日历命令" class="headerlink" title="（四）cal日历命令"></a>（四）cal日历命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">cal / cal -1  打印当月日历<br>cal -3 打印前三个月日历<br>cal -n number 打印前n月的日历<br>cal -y 打印一整年的日历<br></code></pre></td></tr></table></figure><h4 id="（五）时间相关命令使用"><a href="#（五）时间相关命令使用" class="headerlink" title="（五）时间相关命令使用"></a>（五）时间相关命令使用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">当我们需要当前系统时间要如何调用当前时间？<br><span class="hljs-meta prompt_">$</span><span class="language-bash">(<span class="hljs-built_in">command</span>)：优先执行括号内的命令</span><br>·command·：优先执行``内的命令<br>例如：<br>创建一个目录以当前系统时间作为目录名，目录内有一文件，文件名为三天前的日期.log进行打包压缩<br>mkdir $(date +%F)<br>cd 目录<br>touch $(date -d &quot;+3days&quot; +%T)<br>tar -zcvf 目录.tar.gz 目录<br></code></pre></td></tr></table></figure><h2 id="第五章、Linux用户管理、vim编辑器、可执行文件"><a href="#第五章、Linux用户管理、vim编辑器、可执行文件" class="headerlink" title="第五章、Linux用户管理、vim编辑器、可执行文件"></a>第五章、Linux用户管理、vim编辑器、可执行文件</h2><h3 id="一、用户管理"><a href="#一、用户管理" class="headerlink" title="一、用户管理"></a>一、用户管理</h3><h4 id="（一）Linux下用户管理"><a href="#（一）Linux下用户管理" class="headerlink" title="（一）Linux下用户管理"></a>（一）Linux下用户管理</h4><ul><li><strong>用户概念和作用</strong><ul><li><strong>什么是用户</strong>：用户就是管理系统和服务的人。</li><li><strong>用户管理管理的是什么</strong>：Linux下一切皆文件，所以用户管理的是文件。</li><li><strong>用户怎样进行管理</strong>：<ul><li><strong>基础管理</strong>：对文件进行管理，文件的创建、查看、复制、粘贴、移动、拷贝、用户管理、权限。</li><li><strong>高级管理</strong>：对软件包进行管理，软件包的配置、安装、删除，目的是对外提供稳定的服务。</li></ul></li></ul></li><li>用户分类<ul><li>超级用户：root用户，对系统具有完全操作权限，UID&#x3D;0并永远会为0</li><li>系统用户：程序用户，一般由程序创建，程序或服务运行是需要的身份，默认不能登陆系统。1&lt;&#x3D; UID &lt;&#x3D;499,Redhat&#x2F;CentOS 1&lt;&#x3D;UID&lt;&#x3D;1000</li><li>普通用户：超级用户创建的用户，具有系统的部分操作权限，默认可以登录系统，500&lt;UID&lt;60000，Redhat&#x2F;CentOS 1000&lt;UID&lt;60000</li></ul></li><li><strong>用户基本管理</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell">创建用户：useradd<br>useradd [选项] username<br>useradd -u username UID（创建用户指定UID）<br>useradd -g groupname username（创建用户添加到指定用户组）<br>useradd -G groupname username（创建用户并为用户添加附属组，一个用户可以有一个主组和多个附属组）<br>useradd -d username /path（创建用户及目录到指定位置）<br>useradd -m username（创建用户并在/home目录创建其用户目录）<br>useradd -s /usr/bin/sh username（创建用户并指定用户默认的shell）<br>注意：选项可以连用<br><br>设置用户密码：passwd<br>1、passwd（为当前用户创建密码）<br>2、passwd username（为指定用户创建密码）<br>3、echo &quot;123456&quot; &gt; passwd --stdin username（使用管道方式为用户添加密码）<br>4、touch passwd.sh vim passwd.sh echo password | passwd --stdin username （使用shell脚本+管道批量为用户添加密码）<br>注意：由root用户身份创建的密码可不遵从密码创建规则，普通用户创建密码需要遵循密码创建规则<br><br>修改用户账号信息：chage<br>chage --help（查看chage命令帮助信息）<br>chage -d username（修改最后一次修改密码时间）<br>chage -E data username（修改账号过期时间的）<br>chage -l username（列出用户账号信息）<br><br>修改用户信息：usermod<br>usermod [选项] username<br>usermod -u UID username（修改用户UID）<br>usermod -G groupname username（修改用户的附属组）<br>usermod -g groupname username（修改用户的主组）<br>usermod -m username（将家目录的文件移到另外的指定目录，仅与-d选项连用，只用-m的话用户对目录没有操作权限）<br>usermod -d /path/username username（修改用户目录，但要保证用户目录的上级目录存在，通常和-m选项连用）<br>usermod -s /sbin/nologin username（修改用户的默认shell）<br><br>删除用户：userdel<br>userdel [选项] username<br>userdel -r username（删除用户并移除其用户目录和用户邮箱）用户邮箱：/var/mail<br>userdel -f username（强制删除当前以登录的用户）<br></code></pre></td></tr></table></figure><ul><li>用户信息文件存放路径及系统支持的shell<ul><li>用户信息存放位置：tail &#x2F;etc&#x2F;passwd</li><li>用户密码保存位置：tail &#x2F;etc&#x2F;shadow</li><li>系统支持的shell位置：cat &#x2F;etc&#x2F;shells</li></ul></li></ul><h4 id="（二）Linux下用户组管理"><a href="#（二）Linux下用户组管理" class="headerlink" title="（二）Linux下用户组管理"></a>（二）Linux下用户组管理</h4><ul><li>用户：管理系统或服务的人</li><li>用户组：用户组是用户的一个属性，一个用户只有一个主组，可以有多个附属组</li><li>用户的作用：方便管理用户</li><li>用户组管理</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">创建用户组：groupadd<br>groupadd groupname<br>groupadd -g groupname（为用户指定GID）<br><br>新建用户并添加到用户组：useradd，groupadd<br>useradd -m -g groupname username<br><br>修改原有用户的用户组：usermod，groupadd<br>usermod -g groupname username<br><br>用户组密码及用户组管理：gpasswd<br>gpasswd [选项] username groupname<br>1、gpasswd groupname（为用户组添加密码）<br>2、gpasswd -a username groupname（添加用户到指定用户组）<br>3、gpasswd -M username01,username02,... groupname（同时添加多个用户到用户组）<br>4、gpasswd -A username groupname（将指定用户修改为用户组中的管理员）<br>5、gpasswd -d username groupname（将用户从组中删除）<br>6、gpasswd -r groupname（删除用户组密码）<br><br>删除用户组：groupdel<br>groupdel groupname（删除用户组，当用户组是其他用户的主组的时候不能被删除）<br></code></pre></td></tr></table></figure><ul><li>用户组相关文件存放位置<ul><li>用户组信息文件存放位置：tail &#x2F;etc&#x2F;group</li><li>用户组密码文件存放位置：tail &#x2F;etc&#x2F;gshadow</li></ul></li></ul><h3 id="二、vim编辑器"><a href="#二、vim编辑器" class="headerlink" title="二、vim编辑器"></a>二、vim编辑器</h3><h4 id="（一）vim编辑器特点"><a href="#（一）vim编辑器特点" class="headerlink" title="（一）vim编辑器特点"></a>（一）vim编辑器特点</h4><ul><li>无图形化界面</li><li>只能通过键盘操作，不能利用鼠标</li><li>没有菜单，只有命名</li><li>只能编辑文本文件</li></ul><h4 id="（二）vim编辑器打开新建文件"><a href="#（二）vim编辑器打开新建文件" class="headerlink" title="（二）vim编辑器打开新建文件"></a>（二）vim编辑器打开新建文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim path<br></code></pre></td></tr></table></figure><h4 id="（三）vim编辑器打开文件定位到指定位置"><a href="#（三）vim编辑器打开文件定位到指定位置" class="headerlink" title="（三）vim编辑器打开文件定位到指定位置"></a>（三）vim编辑器打开文件定位到指定位置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim path +lines<br></code></pre></td></tr></table></figure><h4 id="（四）vim编辑器删除编辑后产生的交换文件"><a href="#（四）vim编辑器删除编辑后产生的交换文件" class="headerlink" title="（四）vim编辑器删除编辑后产生的交换文件"></a>（四）vim编辑器删除编辑后产生的交换文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">进入vim界面后按提示操作，按“d”键，或回到当前文件目录，使用rm命令删除.开头的文件<br></code></pre></td></tr></table></figure><h4 id="（五）vim编辑器三种基本模式"><a href="#（五）vim编辑器三种基本模式" class="headerlink" title="（五）vim编辑器三种基本模式"></a>（五）vim编辑器三种基本模式</h4><ul><li><strong>命令模式</strong>：vim编辑的入口，可以使用命令文件进行操作，移动、选择、复制、删除（剪切）、撤回、恢复等</li><li><strong>编辑模式</strong>：在此模式下可以对文本进行编辑</li><li><strong>末行模式</strong>：vim编辑器的出口，可通过该模式对文本进行保存，退出等操作。</li><li>模式之间的切换</li></ul><table><thead><tr><th>模式转换</th><th>转换方法</th></tr></thead><tbody><tr><td>命令 → 编辑</td><td>a&#x2F;A&#x2F;i&#x2F;I&#x2F;o&#x2F;O&#x2F;s&#x2F;S</td></tr><tr><td>命令 → 末行</td><td>:</td></tr><tr><td>编辑、末行 → 命令</td><td>ESC</td></tr><tr><td>编辑 → 末行</td><td>ESC，:</td></tr><tr><td>末行 → 编辑</td><td>ESC，a&#x2F;A&#x2F;i&#x2F;I&#x2F;o&#x2F;O&#x2F;s&#x2F;S</td></tr></tbody></table><h4 id="（六）vim编辑器操作"><a href="#（六）vim编辑器操作" class="headerlink" title="（六）vim编辑器操作"></a>（六）vim编辑器操作</h4><ul><li>重复执行<ul><li>number + x（执行）</li></ul></li><li>移动<ul><li>单个字符移动<ul><li>h 左 </li><li>j 下 </li><li>k 上 </li><li>l 右</li></ul></li><li>行内移动<ul><li>w向后移动一个单词</li><li>b向前移动一个单词</li><li>$移动到当行最后一个字符</li><li>0移动到当行最前</li><li>^移动到当行最前一个字符的位置</li></ul></li><li>行数移动<ul><li>gg移动到第一行</li><li>G移动到最后一行</li><li>行数+gg移动到指定行数</li><li>行数+G移动到指定行数</li><li>:+行数移动到指定行数</li></ul></li><li>翻页移动<ul><li>Ctrl+f向下翻页</li><li>Ctrl+b向上翻页</li><li>H    回到顶部</li><li>M    回到中间位置</li><li>L    回到底部</li></ul></li><li>段落移动<ul><li>{移动到上一个段落</li><li>}移动大下一个段落</li></ul></li><li>括号匹配<ul><li>%匹配与当前光标对应的括号</li></ul></li><li>标记回跳<ul><li>m {mask}标记{mask}</li><li>&#96; {mask}回跳到{mask}位置</li></ul></li></ul></li><li>选择<ul><li>可视模式<ul><li>v可视模式（选中光标所经过的文本）</li><li>V可视行模式（选中光标所经过的行的文本）</li><li>Ctrl+v可视块模式（选中垂直方向上的文本）</li></ul></li></ul></li><li>编辑<ul><li>撤销和恢复撤销<ul><li>u撤销上一操作</li><li>Ctrl+r恢复上次撤销操作</li></ul></li><li>删除（剪切）<ul><li>x删除光标处字符</li><li>d删除文本和移动命令连用</li><li>dd删除当前光标所在行，ndd删除当前光标及其后n-1行</li><li>D删除至行尾</li></ul></li><li>复制、粘贴<ul><li><pre><code class="hljs">y复制文本，和移动命令连用</code></pre></li><li>yy复制当行，nyy复制当行包括其后的n行</li><li>p粘贴</li></ul></li><li>替换文本<ul><li>r替换光标所在字符</li><li>R替换光标所在单词</li></ul></li><li>缩排、重复执行<ul><li>&lt;&lt;向左缩进（4个字符）</li><li>&gt;&gt;向右所经</li><li>.重复执行</li></ul></li><li>查找替换<ul><li>查找<ul><li>&#x2F;str查找str</li><li>n向下匹配str</li><li>N向上匹配str</li></ul></li><li>匹配单词<ul><li>*向下匹配单词</li><li>#向上匹配单词</li></ul></li><li>替换格式<ul><li>:%s&#x2F;&#x2F;&#x2F;g</li></ul></li><li>全局替换<ul><li>:%s&#x2F;oldstr&#x2F;newstr&#x2F;g</li></ul></li><li>可视区域替换<ul><li>1、通过可视模式选中文件</li><li>2、:’&lt;,’&gt;s&#x2F;oldstr&#x2F;newstr&#x2F;g</li></ul></li><li>确认替换<ul><li>:%s&#x2F;oldstr&#x2F;newstr&#x2F;gc</li></ul></li><li>转义符替换<ul><li>:%s&#x2F;\&#x2F;sbin\&#x2F;nologin\&#x2F;bin\&#x2F;sh&#x2F;g</li></ul></li><li>指定行数替换<ul><li>:7s&#x2F;oldstr&#x2F;newstr&#x2F;g</li></ul></li></ul></li><li>插入文本<ul><li>a当前字符后插入</li><li>A当行最后插入</li><li>o当行下添加空行插入</li><li>O当行上添加空行插入</li><li>i当前字符前插入</li><li>I当行最前方插入</li><li>s删除当前字符插入</li><li>S删除当前行插入</li></ul></li></ul></li></ul><h4 id="（七）vim末行模式"><a href="#（七）vim末行模式" class="headerlink" title="（七）vim末行模式"></a>（七）vim末行模式</h4><ul><li>:w保存文本</li><li>:q退出当前编辑</li><li>:wq保存并退出</li><li>:q!强制退出</li><li>:x保存并退出</li><li>:efile 不退出vim编辑界面编辑其他文件（常用：:e .&#x2F;）</li><li>:nfile 在当前编辑界面新建文件并编辑</li><li>:wfilename 另存为其他文件</li></ul><h4 id="（八）vim分屏操作"><a href="#（八）vim分屏操作" class="headerlink" title="（八）vim分屏操作"></a>（八）vim分屏操作</h4><ul><li><p>终端中分屏</p><ul><li>vim -on [file1] [file2] </li><li>vim -On [file1] [file2]</li><li>-o垂直分割</li><li>-O水平分割</li><li>-n窗口数量，可省略，会根据需打开的文件数量来确定打开的窗口数量</li><li>[file1] [file2] 需要打开的文件名</li></ul></li><li><p>vim中分屏</p><ul><li>:new [filename] 跟文件名表示在当前窗口上创建窗口并打开文件 不跟文件表示在当前窗口上创建新窗口</li><li>:sp&#x2F;split [filename] or [CTRL] [W]  s 水平创建窗口</li><li>:vsp&#x2F;vsplit [filename] or [CTRL] [W]  v 垂直创建窗口</li><li>:only or [CTRL] W o 关闭当前窗口外的其他窗口</li><li>:q&#x2F;quit 关闭当前窗口</li></ul></li><li><p>窗口操作</p></li></ul><table><thead><tr><th align="center">命令</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">[CTRL]  [W]  +</td><td align="center">扩大窗口</td></tr><tr><td align="center">[CTRL]  [W]  -</td><td align="center">缩小窗口</td></tr><tr><td align="center">[CTRL]  [W]  h</td><td align="center">跳转到左边的窗口</td></tr><tr><td align="center">[CTRL]  [W]  j</td><td align="center">跳转到下边的窗口</td></tr><tr><td align="center">[CTRL]  [W]  k</td><td align="center">跳转到上边的窗口</td></tr><tr><td align="center">[CTRL]  [W]  l</td><td align="center">跳转到右边的窗口</td></tr><tr><td align="center">[CTRL]  [W]  t</td><td align="center">跳转到最顶上的窗口</td></tr><tr><td align="center">[CTRL]  [W]  b</td><td align="center">跳转到最顶下的窗口</td></tr></tbody></table><h4 id="（九）vim自定义设置"><a href="#（九）vim自定义设置" class="headerlink" title="（九）vim自定义设置"></a>（九）vim自定义设置</h4><ul><li>:set number显示vim界面行数</li><li>:set list显示控制符</li><li>:noh取消高亮</li></ul><h3 id="三、可执行脚本"><a href="#三、可执行脚本" class="headerlink" title="三、可执行脚本"></a>三、可执行脚本</h3><h4 id="（一）可执行脚本概述"><a href="#（一）可执行脚本概述" class="headerlink" title="（一）可执行脚本概述"></a>（一）可执行脚本概述</h4><ul><li>什么是可执行脚本：通过脚本语言编写的可执行的文件</li><li>可执行脚本的作用：方便操作、减轻工作量</li><li>可执行脚本类别：shell脚本、Python脚本、perl脚本</li><li>脚本解释器：脚本文件在执行的时候需要有一个脚本解释器将脚本翻译成计算机能理解并执行的指令</li><li>常见脚本解释器：&#x2F;bin&#x2F;sh（shell解释器） &#x2F;bin&#x2F;python（Python解释器） &#x2F;bin&#x2F;perl（perl解释器）</li></ul><h4 id="（二）创建可执行脚本"><a href="#（二）创建可执行脚本" class="headerlink" title="（二）创建可执行脚本"></a>（二）创建可执行脚本</h4><ul><li>shell脚本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/sh固定写法</span><br>echo &quot;hello world!&quot;;语言规范<br></code></pre></td></tr></table></figure><ul><li>Python脚本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/python</span><br>print(&#x27;hello world!&#x27;);<br></code></pre></td></tr></table></figure><ul><li>perl脚本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/perl</span><br>print &quot;hello world!\n&quot;;<br></code></pre></td></tr></table></figure><h4 id="（三）执行可执行脚本"><a href="#（三）执行可执行脚本" class="headerlink" title="（三）执行可执行脚本"></a>（三）执行可执行脚本</h4><ul><li>方式一、直接执行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">./shell.sh<br>./python.py<br>./perl.pl<br></code></pre></td></tr></table></figure><ul><li>方式二、通过脚本解释器执行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">/bin/sh/shell.sh<br>/bin/python/python.py<br>/bin/perl/perl.pl<br></code></pre></td></tr></table></figure><h2 id="第六章、Linux权限管理"><a href="#第六章、Linux权限管理" class="headerlink" title="第六章、Linux权限管理"></a>第六章、Linux权限管理</h2><h3 id="一、权限概述"><a href="#一、权限概述" class="headerlink" title="一、权限概述"></a>一、权限概述</h3><h4 id="（一）权限是什么"><a href="#（一）权限是什么" class="headerlink" title="（一）权限是什么"></a>（一）权限是什么</h4><ul><li><strong>权限</strong>：在计算机系统中，权限就是计算机给指定用户对指定软件资源的操作权力</li><li>软件资源：操作系统（特殊的软件资源）、应用程序、当应用程序未启动时就是一堆静态文件，存放在磁盘中。</li><li>文件资源：&#x3D;&#x3D;Linux下一切皆文件&#x3D;&#x3D;，所以软件资源就是文件资源</li></ul><h4 id="（二）权限的作用"><a href="#（二）权限的作用" class="headerlink" title="（二）权限的作用"></a>（二）权限的作用</h4><ul><li>作用：权限给指定用户操作指定文件的权力，可以更好的管理软件资源，为计算机提供了更高的安全保障。</li></ul><h4 id="（三）权限的分类"><a href="#（三）权限的分类" class="headerlink" title="（三）权限的分类"></a>（三）权限的分类</h4><ul><li><strong>普通权限</strong>：用户正常对文件操作的操作权限</li><li><strong>高级权限</strong>：用户需要对文件进行一些特殊的操作，但是普通权限不能满时的权限</li><li><strong>默认权限</strong>：文件创建时就有的权限</li></ul><h3 id="二、普通权限"><a href="#二、普通权限" class="headerlink" title="二、普通权限"></a>二、普通权限</h3><h4 id="（一）了解rwx-的含义"><a href="#（一）了解rwx-的含义" class="headerlink" title="（一）了解rwx-的含义"></a>（一）了解rwx-的含义</h4><ul><li>r（读权限）<ul><li>对目录：可以进入目录，查看目录内文件信息</li><li>对文件：可以查看文件内容</li><li>数字表示：4</li></ul></li><li>w（写权限）<ul><li>对目录：可以在目录内创建，删除，移动等文件操作权限</li><li>对文件：可以编辑文件内容</li><li>数字表示：2</li></ul></li><li>x（可执行权限）<ul><li>一般针对可执行文件，添加该权限可以对文件进行执行操作</li><li>数字表示：1</li></ul></li><li>-（没有权限）<ul><li>对文件没有任何操作权限</li><li>数字表示：0</li></ul></li></ul><h4 id="（二）uoga的含义"><a href="#（二）uoga的含义" class="headerlink" title="（二）uoga的含义"></a>（二）uoga的含义</h4><ul><li>u：当前文件属主</li><li>o：除当前文件属主和其属组成员的其他用户</li><li>g：当前文件属主的同组成员用户</li><li>a：所有用户</li></ul><h4 id="（三）修改普通权限（chmod）"><a href="#（三）修改普通权限（chmod）" class="headerlink" title="（三）修改普通权限（chmod）"></a>（三）修改普通权限（chmod）</h4><ul><li>字母方式修改权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod (a/u/o/g)(+/=/-)(r/w/x) file<br></code></pre></td></tr></table></figure><ul><li>数字方式修改权限（数字会自动匹配，系统会自动计算）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 777 file<br></code></pre></td></tr></table></figure><h3 id="三、文件属主和属组"><a href="#三、文件属主和属组" class="headerlink" title="三、文件属主和属组"></a>三、文件属主和属组</h3><h4 id="（一）文件属主和属组"><a href="#（一）文件属主和属组" class="headerlink" title="（一）文件属主和属组"></a>（一）文件属主和属组</h4><ul><li><strong>属主</strong>：创建文件的用户</li><li><strong>属组</strong>：创建文件的用户的同组成员用户</li></ul><h4 id="（二）修改文件属主和属组（chown，chgrp）"><a href="#（二）修改文件属主和属组（chown，chgrp）" class="headerlink" title="（二）修改文件属主和属组（chown，chgrp）"></a>（二）修改文件属主和属组（chown，chgrp）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">chown [选项] username:groupname filename<br>chown -R username（递归修改文件属组）<br>chown -R username:groupname filename or chown -R username.groupname filename（递归修改文件的属主和属组）<br>chown -R :groupname filename or chown -R .groupname filename（递归修改文件的属组）<br>chgrp groupname filename（修改文件属组）<br></code></pre></td></tr></table></figure><h3 id="四、高级权限"><a href="#四、高级权限" class="headerlink" title="四、高级权限"></a>四、高级权限</h3><h4 id="（一）冒险位"><a href="#（一）冒险位" class="headerlink" title="（一）冒险位"></a>（一）冒险位</h4><ul><li>什么是冒险位：冒险位是指&#x3D;&#x3D;文件操作者临时拥有文件所有者的权限&#x3D;&#x3D;</li><li>冒险位的作用对象：冒险位&#x3D;&#x3D;一般作用在命令或脚本文件上&#x3D;&#x3D;</li><li>冒险位的表示方式：冒险位&#x3D;&#x3D;用字母s&#x2F;S表示，用数字4表示&#x3D;&#x3D;</li><li>冒险位的设置方法（chmod）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、字母方法<br>chmod u+s/S usr/bin/touch<br>2、数字方法<br>chmod 4xxx /usr/bin//touch<br>3、关闭权限<br>chmod u-s/S /usr/bin/touch<br>chmod 0xxx /usr/bin/touch<br>注意：冒险位使用很危险。在临时使用后要记得关闭权限<br></code></pre></td></tr></table></figure><h4 id="（二）强制位"><a href="#（二）强制位" class="headerlink" title="（二）强制位"></a>（二）强制位</h4><ul><li>什么是强制位：设置了强制位的目录，&#x3D;&#x3D;不论&#x3D;&#x3D;是&#x3D;&#x3D;哪个用户&#x3D;&#x3D;在&#x3D;&#x3D;目录内创建文件&#x3D;&#x3D;的&#x3D;&#x3D;属组&#x3D;&#x3D;都&#x3D;&#x3D;强制继承该目录的属组&#x3D;&#x3D;</li><li>强制为的作用对象：&#x3D;&#x3D;针对文件&#x3D;&#x3D;</li><li>强制位的表示方法：&#x3D;&#x3D;字母s&#x2F;S表示，数字2表示&#x3D;&#x3D;</li><li>强制位的设置方法（chmod）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、字母方法<br>chmod g+s/S filename<br>2、数字方法<br>chmod 2xxx filename<br>3、关闭权限<br>chmod g-s/S filename<br>chmod 0xxx filename<br></code></pre></td></tr></table></figure><h4 id="（三）粘滞位"><a href="#（三）粘滞位" class="headerlink" title="（三）粘滞位"></a>（三）粘滞位</h4><ul><li>什么是粘滞位：设置了粘滞位的目录，其目录下的&#x3D;&#x3D;文件操作权限只为root用户和文件创建者所有&#x3D;&#x3D;<br>  ​- 粘滞位的作用对象：针对&#x3D;&#x3D;公共目录&#x3D;&#x3D;</li><li>粘滞位的表示方法：&#x3D;&#x3D;字母t&#x2F;T表示，数字1表示&#x3D;&#x3D;</li><li>粘滞位的设方法（chmod）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、字母设置<br>chmod o+t/T filename<br>2、数字设置<br>chmod 1xxx filename<br>3、关闭权限<br>chmod o-t/T filename<br>chmod 0xxx filename<br></code></pre></td></tr></table></figure><h3 id="五、默认权限"><a href="#五、默认权限" class="headerlink" title="五、默认权限"></a>五、默认权限</h3><h4 id="（一）什么是文件的默认权限"><a href="#（一）什么是文件的默认权限" class="headerlink" title="（一）什么是文件的默认权限"></a>（一）什么是文件的默认权限</h4><ul><li>文件的默认权限：文件创建时的权限，文件一创建就有的权限</li><li>目录的最高权限为0777，文件的最高权限为0666</li></ul><h4 id="（二）文件的默认权限由谁控制"><a href="#（二）文件的默认权限由谁控制" class="headerlink" title="（二）文件的默认权限由谁控制"></a>（二）文件的默认权限由谁控制</h4><ul><li>文件的默认权限由umask控制</li><li>文件默认权限的计算方式：默认权限&#x3D;最高权限-umask值</li></ul><h4 id="（三）文件默认权限查看和设置"><a href="#（三）文件默认权限查看和设置" class="headerlink" title="（三）文件默认权限查看和设置"></a>（三）文件默认权限查看和设置</h4><ul><li>查看文件的默认权限：umask</li><li>设置文件的默认权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">临时修改：<br>用户user01设置umask值为0005<br>切换到user01：su - user01<br>设置umask值为0003：umask 0005<br>创建文件：touch /tmp/test<br>查看文件权限：ll /tmp/test 会发现其他用户的权限为读权限<br>注意：<br>①临时设置的umask只对当前终端的当前用户生效<br>②权限用数字表示不能为负数，当权限为负数时用0表示<br>③文件的默认权限遵循Linux下权限最小化原则<br><br>永久修改：<br>1、针对所有用户设置umask<br>编辑配置文件：vim /etc/bashrc<br>最后一行添加：umask=指定数值<br>重载配置文件：source /etc/bashrc<br>2、针对指定用户设置umask<br>切换到指定用户：su - username<br>修改配置文件：vim ~/.bashrc<br>最后一行加：umask=指定数值<br>重载配置文件：source ~/.bashrc<br></code></pre></td></tr></table></figure><h3 id="六、ACL访问控制策略"><a href="#六、ACL访问控制策略" class="headerlink" title="六、ACL访问控制策略"></a>六、ACL访问控制策略</h3><h4 id="（一）ACL策略的作用"><a href="#（一）ACL策略的作用" class="headerlink" title="（一）ACL策略的作用"></a>（一）ACL策略的作用</h4><ul><li>ACL策略能够更加精细的控制文件权限</li><li>ACL策略可以设置指定用户在指定文件上的权限</li><li>ACL策略可以设置指定用户组在指定文件上的权限</li></ul><h4 id="（二）ACL策略相关命令"><a href="#（二）ACL策略相关命令" class="headerlink" title="（二）ACL策略相关命令"></a>（二）ACL策略相关命令</h4><ul><li>查看文件的acl策略：getfacl</li><li>设置文件的acl策略：setfacl</li></ul><h4 id="（三）设置文件的ACL策略"><a href="#（三）设置文件的ACL策略" class="headerlink" title="（三）设置文件的ACL策略"></a>（三）设置文件的ACL策略</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">setfacl [选项] u:username:权限 filename（修改指定用户对文件的操作权限）<br>setfacl [选项] g:groupname:权限 filename（修改指定用户组对指定文件的操作权限）<br>setfacl [选项] mask::权限 filename（修改除其他人【o】和其文件属主以外的其他用户【同组成员】高权限）<br>setfacl -b filename（删除当前文件的所有acl策略）<br>setfacl -m（修改或设置acl策略）<br>setfacl -mR（递归授权，包括当前目录和其子文件（不包括新建文件）在内的所有文件都享有所设置的acl策略）<br>setfacl -md（默认acl，当前目录下（不包括当前目录）的子文件（包括新建文件）享有所设置的acl策略）<br>setfacl -x（删除某个用户或用户组的acl策略）<br>setfacl -b（删除当前文件的所有acl策略）<br></code></pre></td></tr></table></figure><h2 id="第七章、Linux基础环境配置"><a href="#第七章、Linux基础环境配置" class="headerlink" title="第七章、Linux基础环境配置"></a>第七章、Linux基础环境配置</h2><h3 id="一、RHEL8web控制台"><a href="#一、RHEL8web控制台" class="headerlink" title="一、RHEL8web控制台"></a>一、RHEL8web控制台</h3><h4 id="（一）RHEL8web控制台介绍"><a href="#（一）RHEL8web控制台介绍" class="headerlink" title="（一）RHEL8web控制台介绍"></a>（一）RHEL8web控制台介绍</h4><ul><li>RHEL8web控制台是什么<ul><li>基于RHEL8系统的web管理界面，用来管理本地或处在网络环境的Linux服务器。</li><li>RHEL8web控制台是交互式服务器管理界面，可以实现浏览器和服务器之间的交互。</li></ul></li><li>RHEL8web控制台能干什么<ul><li>监控基本系统功能，例如硬件信息、时间配置、性能配置等。</li><li>检查系统日志</li><li>管理网络接口和配置防火墙</li><li>管理虚拟机</li><li>管理用户账号</li><li>监视和配置系统服务</li><li>管理软件包</li><li>配置SELinux</li><li>更新软件</li><li>访问终端</li></ul></li></ul><h4 id="（二）安装RHEL8web控制台"><a href="#（二）安装RHEL8web控制台" class="headerlink" title="（二）安装RHEL8web控制台"></a>（二）安装RHEL8web控制台</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install cockpit<br></code></pre></td></tr></table></figure><h4 id="（三）启动服务并登录RHEL8web控制台"><a href="#（三）启动服务并登录RHEL8web控制台" class="headerlink" title="（三）启动服务并登录RHEL8web控制台"></a>（三）启动服务并登录RHEL8web控制台</h4><ul><li>启动服务并设置开机自启</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、启动服务<br>systemctl start cockpit.service<br>2、设置开机自启<br>systemctl enable --now cockpit.scoket<br></code></pre></td></tr></table></figure><ul><li>查看服务是否启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status cockpit.service<br></code></pre></td></tr></table></figure><ul><li>查看服务是否开机自启</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl list-unit-files | grep cockpit.service<br></code></pre></td></tr></table></figure><ul><li>查看服务端口是否监听</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、使用netstat命令<br>netstat -nltp | grep :9090（port/servername）<br>2、使用lsof命令<br>lsof -i :9090（port / servername）<br></code></pre></td></tr></table></figure><ul><li>关闭防火墙SELinux或者设置防火墙开放端口</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">关闭防火墙和SELinux：<br>1、关闭防火墙<br>systemctl stop firewalld.service<br>2、设置开机关闭防火墙<br>systemctl disable --now firewalld.service<br><br>开放防火墙端口：<br>1、临时开放<br>firewall-cmd --add-server=cockpit.service<br>2、永久开放<br>firewall-cmd --add-server=cockpit.service --permanent<br>3、永久开放80端口<br>firewall-cmd --zone=public --add-port=80/tcp --permanent<br>4、重启加载端口信息<br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><ul><li>在浏览器中登录RHEL8web控制台</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">浏览器中输入:http://ip:9090<br>在本机中输入:http://localhost:9090<br></code></pre></td></tr></table></figure><h4 id="（四）利用RHEL8web控制台对系统进行管理"><a href="#（四）利用RHEL8web控制台对系统进行管理" class="headerlink" title="（四）利用RHEL8web控制台对系统进行管理"></a>（四）利用RHEL8web控制台对系统进行管理</h4><ul><li>修改主机名</li><li>关闭防火墙和SELinux</li><li>按需求进行网络配置</li></ul><h3 id="二、使用终端命令管理系统"><a href="#二、使用终端命令管理系统" class="headerlink" title="二、使用终端命令管理系统"></a>二、使用终端命令管理系统</h3><h4 id="（一）修改主机名"><a href="#（一）修改主机名" class="headerlink" title="（一）修改主机名"></a>（一）修改主机名</h4><ul><li>命令修改</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname hostname<br></code></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/hostname<br></code></pre></td></tr></table></figure><h4 id="（二）配置网络"><a href="#（二）配置网络" class="headerlink" title="（二）配置网络"></a>（二）配置网络</h4><ul><li>VMware workstation的三种网络模式<ul><li><strong>桥接模式</strong>：<ul><li>虚拟机网卡和本地物理网卡桥接，并给创建的虚拟机分配ip</li><li>设置桥接模式的虚拟机和本地网卡处于同一网段</li><li>设置了桥接模式的多台虚拟机可以和主机、以及主机同一网段设备、进行相互通信</li><li>若主机能访问外部网络，则设置桥接模式的虚拟机也可以访问外部网络，但外部网络不能访问虚拟机</li></ul></li><li><strong>nat模式</strong>：<ul><li>使用本地的VMnet0网卡作为交换机网卡，可以给设置了该模式的虚拟机分配ip</li><li>nat模式下可以自定义ip地址</li><li>nat模式下的ip与主机不在同一网段，通过nat路由转换技术将虚拟机ip转换为主机同一网段ip</li><li>nat模式下的虚拟机可以访问主机和同主机处于同一网段的设备，但同主机同一网段的设备不能访问虚拟机</li><li>当主机能访问外部网络的时候，设置了nat模式的虚拟机也可以访问外部网络，但外部网络不能访问虚拟机</li></ul></li><li><strong>仅主机模式</strong>：<ul><li>使用本地的VMnet8网卡作为交换机网卡，可以给设置了该模式的虚拟机分配ip</li><li>仅主机模式下可以自定义ip地址</li><li>仅主机模式下的ip和主机不在同一网段</li><li>仅主机模式下的虚拟机只能和主机进行相互通信，不能和同主机处于同一网段的设置和外部网络进行通信</li></ul></li></ul></li><li>VMware workstation自定义网络设置<ul><li>修改桥接模式下桥接的物理网卡</li><li>修改nat模式下的网段</li><li>修改仅主机模式下的网段</li><li>添加、删除网卡</li></ul></li><li>配置静态IP</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs shell">修改配置文件：<br>vim /etc/sysconfig/network-scripts/ifcfg-ens160<br><br>TYPE=Ethernet网络类型：以太网<br>BOOTPROTO=staticIP获取方式<br>NAME=ens160网卡名称<br>UUID=7ebb621a-84a0-41c6-bd78-2d5c0fe95b9d网卡的位置标识<br>DEVICE=ens160网卡设备名<br>ONBOOT=yes网卡是否启动<br>IPADDR=xxx.xxx.x.x静态ip地址<br>GATEWAY=xxx.xxx.x.x网关地址<br>DNS1=8.8.8.8dns服务器<br>PREFIX=21子网掩码，也可设置为MASKNET=255.255.255.0<br><br>重新加载网卡配置文件<br>nmcli connection reload ens160 <br>重新激活网卡连接<br>nmcli connection up ens160<br><br>使用nmcli命令配置网络<br>1、查看系统当前网卡<br>nmcli connection show<br>2、查看当前已激活的网卡<br>nmcli c s --active<br>3、修改ip地址<br>nmcli c modify ens160 ipv4.address xxx.xxx.x.x<br>4、添加、删除IP地址（子接口）<br>nmcli c m ens160 +/-ipv4.address xxx.xxx.x.x<br>5、修改网关地址<br>nmcli c m ens160 ipv4.gateway xxx.xxx.xxx.x<br>6、修改dns服务器<br>nmcli c m ens160 ipv4.dns 8.8.8.8<br>7、添加、删除dns服务器<br>nmcli c m ens160 +/-ipv4.dns 114.114.114.114<br>8、同时修改一块网卡的多个属性<br>nmcli c m ens160 ipv4.address xxx.xxx.x.x ipv4.gateway xxx.xxx.x.x ipv4.dns 8.8.8.8<br>9、重载网卡配置信息<br>nmcli c reload ens160<br>10、重新激活网卡连接<br>nmcli c up ens160<br><br>使用nmtui文本图形化工具配置网络<br>nmtui命令进行文本图形化界面<br></code></pre></td></tr></table></figure><h4 id="（三）软件包管理"><a href="#（三）软件包管理" class="headerlink" title="（三）软件包管理"></a>（三）软件包管理</h4><ul><li>Linux软件包的分类<ul><li>二进制包<ul><li>二进制包是已经编译后的软件包，可以直接安装使用</li><li>二进制包不需要编译，可以直接安装使用</li><li>二进制包的选择要根据系统版本，CPU架构，进行合理的选择</li><li>二进制包的命名格式：example-5.1.3-42.el6.x86_64.rpm 软件名-版本.系统版本.CPU架构.二进制包后缀</li><li>二进制包功能不能定制</li></ul></li><li>源码包<ul><li>源码包是程序员写的原始代码，需要经过编译后才能安装使用</li><li>源码包可在任何计算机上安装，且经编译安装的软件非常适合当前机器</li><li>源码包功能可以根据实际需求进行定制</li><li>源码包常用格式 .tar.gz .tar.xz . tar.bz2 .zip</li></ul></li><li>二进制源码包<ul><li>二进制源码包是半成品的安装包，安装后不能直接使用</li><li>要经过rpmbuild工具重构成二进制包，或者重构成源码包才能安装使用。</li><li>命名方式：mysql-community-5.7.52-1.el7.src.rpm</li></ul></li><li>常见二进制包及二进制包和源码包的区别</li></ul></li></ul><table><thead><tr><th>Linux发行版</th><th>包类型</th><th>工具</th><th>安装工具</th></tr></thead><tbody><tr><td>RedHat、CentOS、Fedora</td><td>rpm</td><td>rpm</td><td>yum(dnf)</td></tr><tr><td>Ubuntu、Debian</td><td>deb</td><td>dpkg</td><td>apt</td></tr></tbody></table><table><thead><tr><th>包类型</th><th>是否需要编译</th><th>安装难易程度</th><th>可定制性</th></tr></thead><tbody><tr><td>二进制包</td><td>否</td><td>易（直接安装）</td><td>弱</td></tr><tr><td>源码包</td><td>是，按需求配置后编译</td><td>难（配置、编译、安装）</td><td>强</td></tr></tbody></table><ul><li>Linux软件包的安装<ul><li>二进制包安装<ul><li>获取rpm包，直接通过rpm包进行安装</li><li>配置yum仓库（本地，远程【保证网络良好】），使用yum（dnf）工具进行安装</li></ul></li><li>源码包安装<ul><li>按实际需求配置文件（定制功能）</li><li>编译配置后的文件（经过编译器将源码包编译成二进制文件）</li><li>正式安装（安装到指定位置）</li><li>源码包可以在任何平台下编译安装，源码包安装后非常适合当前机器</li><li>源码包可以按需求配置相关文件，对某些功能进行定制，开启或关闭某些服务</li></ul></li></ul></li><li>使用rpm工具管理二进制包（rpm工具需要手动解决依赖）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell">安装：<br>rpm -ivh software（安装软件包）<br><br>查看：<br>rpm -q software（查看软件包是否安装）<br><br>卸载：<br>rpm -e software（移除已安装的软件包）<br><br>升级：<br>1、未安装情况下升级软件<br>rpm -Uvh software<br>2、已安装情况下升级软件<br>rpm -Fvh software <br><br>查看软件包内容：<br>rpm -q software（查看软件包是否安装）<br>rpm -qa software（查看已安装的所有软件包，通常用法：rpm -qa | grep xxx【查询xxx软件包安装信息】）<br>rpm -ql software（列出已安装软件包的详细内容）<br>rpm -qlp software（列出未安装软件包的详细内容）<br>rpm -qc software（列出软件包的配置文件位置）<br>rpm -qd software（列出软件包文档文件位置信息）<br>rpm -qi software（查看已安装软件包的详细信息）<br>rpm -qf file（查看某个文件属于哪个软件包）<br><br>其他选项:<br>1、--force（强制命令）<br>强制安装：rpm -ivh software --force<br>强制删除：rpm -e software --force<br>2、--nodeps（忽略依赖）<br>安装时忽略依赖：rpm -ivh software --nodeps（不建议使用，忽略依赖安装软件可能造成某些服务不能正常运行）<br>删除时忽略依赖：rpm -e software --nodeps<br><br>建议:<br>1、如何获取rpm包<br>RHEL/CentOS光盘自带的rpm包<br>推荐网站：findrpm.net、rpm.phone.net<br>2、如何选择合适的rpm包<br>要根据自己系统版本和CPU架构选择合适的rpm包<br>建议不要跨大版本安装rpm包<br></code></pre></td></tr></table></figure><ul><li>yum（dnf）工具管理<ul><li>介绍yum（dnf）工具<ul><li>yum工具的有点：不需要手动解决依赖</li><li>核心：使用yum（dnf）工具需要一个软件仓库，仓库里存放的是软件包和软件包的依赖关系</li><li>软件仓库：本地仓库（本地yum源），远程仓库（保证网络联通信良好）</li><li>yum源：告诉yum工具软件仓库的位置</li></ul></li><li>配置本地yum源<ul><li>本地仓库分类<ul><li>BaseOS存储库：提供一套核心的底层操作系统功能，为基础软件安装库</li><li>Appstream存储库：用户空间应用程序，运行时的语言程序、数据库管理系统</li></ul></li><li>配置本地仓库</li></ul></li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell">挂载镜像到指定挂载点，并设置开机自动挂载：<br>1、显示文件系统信息<br>df -h<br>2、显示所有文件系统信息<br>df -a<br>3、将镜像文件挂载到/mnt<br>mount -o ro /dev/sr0 /mnt（挂载到/mnt） <br>ls /mnt（查看是否挂载成功）<br>4、设置开机自动将镜像文件挂载到/mnt<br>echo &quot;mount -o ro /dev/sr0 /mnt&quot; &gt; /etc/rc.d/rc.local<br>chmod +x /etc/rc.local<br><br>修改yum配置文件指定本地存储库：<br>vim /etc/yum.d.repos/local.repo<br>编辑内容：<br>[BaseOS]（仓库标识）<br>name=baseos yum（仓库名称）<br>baseusrl=file:///mnt/BaseOS/（基础软件库）<br>enabled=1（是否开启软件仓库）<br>gpgcheck=0（不需要校验软件签名）<br><br>[AppStream]<br>name=app yum <br>baseurl=file:///mnt/AppStream/<br>enabled=1<br>gpgcheck=0<br>编辑完成保存并退出<br><br>验证是否配置成功：<br>yum clean all（清空yum仓库）<br>yum makecache（创建yum缓存）<br>yum repolist（查看yum源）<br>yum list（查看yum列表）<br><br>yum（dnf）工具的使用：<br>yum -y install（安装软件包）<br>yum -y groupinstall &quot;包组名&quot;（包组：大型软件包，包含很多子软件包，例如桌面环境）<br>yum -y remove（移除软件包）<br>yum -y groupremove &quot;包组名&quot;<br>yum search（查询软件包）<br>yum list | grep xxx（查看已安装的xxxx软件）<br>yum -y update（升级软件包） <br></code></pre></td></tr></table></figure><ul><li>源码包的安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">安装C语言编译器gcc：<br>1、安装：<br>yum -y install gcc automake autoconf libtool make<br>2、安装g++:<br>yum install gcc gcc-c++<br><br>下载源码包：进入软件包的官方网站找到与系统版本相对应的源码包<br>进入/usr/local/目录创建软件包名，并进入创建的目录<br>cd /usr/local/ &amp;&amp; mkdir nginx<br>cd nginx<br><br>解压文件到创建的目录：<br>tar -zxvf /root/nginx-1.19.0.tar.gz -C ./<br><br>进入解压后的目录，根据需求指定安装位置，并编译安装<br>cd nginx-1.19.0<br>./configure<br>make 编译<br>make install 安装<br>make &amp;&amp; make install 编译安装<br><br>测试验证安装结果：<br>/usr/local/nginx/sbin/nginx启动nginx服务<br>在浏览器中输入：ip:80查看服务是否启动<br></code></pre></td></tr></table></figure><ul><li>补充扩展，脚本安装包的用法</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">下载脚本安装包：到对应软件的官网下载对应的软件<br><br>解压：<br>tar -zxvf software -C ./<br>cd software<br><br>执行脚本安装命令进行安装：<br>./setup.sh<br>根据需求填写内容，一直点击下一步即可<br></code></pre></td></tr></table></figure><h2 id="第八章、Linux程序进程、自带服务"><a href="#第八章、Linux程序进程、自带服务" class="headerlink" title="第八章、Linux程序进程、自带服务"></a>第八章、Linux程序进程、自带服务</h2><h3 id="一、Linux进程检测控制"><a href="#一、Linux进程检测控制" class="headerlink" title="一、Linux进程检测控制"></a>一、Linux进程检测控制</h3><h4 id="（一）认识管道"><a href="#（一）认识管道" class="headerlink" title="（一）认识管道"></a>（一）认识管道</h4><ul><li>管道的概念<ul><li>是一种特殊的文件</li><li>在Unix系统中管道文件是实现进程之间通信的一种方式或机制</li></ul></li><li>管道的分类<ul><li>匿名管道<ul><li>表示方式：在bash中用“|”表示</li><li>作用对象：在同一终端下，用于父子进程之间通讯的一种方式</li><li>作用：将上一命令的执行结果（标准输出）作为下一命令的标准输入，匿名管道没有数量限制</li><li>用法：将上一命令的执行结果通过下一命令进行筛选：rpm -qa | grep xxx &#x2F;yum list | grep xxx</li></ul></li><li>命名管道（mkfifo）<ul><li>作用对象：作用在不同终端下，可用于任何进程之间通讯</li><li>作用：将通过mkfifo创建的管道文件可以在其他终端利用grep命令按需求取出该文件内容，取出文件内容后，源mkfifo文件内容清空</li><li>用法</li></ul></li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、利用mkfifo命令在/tmp目录下创建p_file.log文件<br>mkfifo /tmp/p_file.log<br>2、将系统当前安装的全部软件包重定向到p_file.log文件<br>rpm -qa &gt; /tmp/p_file.log<br>3、新建终端并利用grep查看openshh文件信息<br>grep openssh /tmp/p_file.log<br>4、使用echo命令将&quot;hello world!&quot;写入p_file.log文件中<br>echo &quot;hello world!&quot; &gt; /tmp/p_file.log<br>5、在另一终端中查看p_file.log文件内容<br>cat /tmp/p_file.log<br></code></pre></td></tr></table></figure><ul><li>引申（xagrs）：将上条命令的执行结果作为下条命令的参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、/tmp/dir1目录下有一个目录文件aaa和file1,file2,file3,file4,file5，要求删除dir下的所有文件<br>方法1：find /tmp/dir1/ -type f -delete<br>方法2：find /tmp/dir1/ -type f -ok/exec rm -rvf &#123;&#125; \;<br>方法3：find /tmp/dir1/ -type f | xargs rm -rvf<br>2、将系统中以安装的httpd软件删除<br>rpm -qa | grep httpd | xargs yum -y remove<br></code></pre></td></tr></table></figure><h4 id="（二）进程概述"><a href="#（二）进程概述" class="headerlink" title="（二）进程概述"></a>（二）进程概述</h4><ul><li>什么是进程<ul><li>程序（静态）：没有运行的程序就是一堆静态文件存储在磁盘中</li><li>进程（动态）：正在运行的程序，已启动的可执行文件</li><li>线程：轻量级的进程，一个进程可以有多个线程，线程不具有资源他和进程共享资源，线程的执行是抢占式的，谁执行快谁就先执行。</li><li>例子：盖大楼（进程），贴瓷砖，砌墙，安装水电气（线程）</li></ul></li><li>进程的特点<ul><li>独立性：每个进程都是计算机上都是独立的实体，都拥有独立的地址空间和独立的资源。</li><li>动态性：程序是一个静态的指令集和，进程是运行的程序是在系统中活动的指令集合。</li><li>并发性：多个进程可以在单个CPU上运行，但是多个进程不会相互影响。</li></ul></li><li>进程的生命周期<ul><li>父进程<ul><li>复制自己的地址空间创建一个新的子进程，每个继承都分配一个Id，用以保证其安全性</li><li>父进程是子进程的环境元素，任何进程都可以创建子进程，所有进程都是第一个进程的后代</li></ul></li><li>子进程<ul><li>继承父进程的环境变量、文件描述符、端口、安全身份、资源、程序代码。</li><li>子进程exec自己的程序代码的时候父进程处于睡眠状态。</li><li>子进程在发出exit状态后，丢弃其环境资源，剩余的环境资源被称为僵停。</li><li>父进程在受到子进程的信号后被唤醒，清理剩余资源，并执行自己的程序代码。</li></ul></li></ul></li></ul><h4 id="（三）进程信息查看"><a href="#（三）进程信息查看" class="headerlink" title="（三）进程信息查看"></a>（三）进程信息查看</h4><ul><li>静态查看（ps）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -ef（显示所有进程及其父子进程的关系,通常用法：ps -ef | grep xxx）<br>ps -eF（显示所有进程及其父子进程的关系）<br>ps -elf（详细显示所有进程何其父子进程的关系）<br>ps aux（显示当前终端所有进程+没有控制终端的所有进程，并显示出当前进程拥有者、状态、资源占用等详细信息）<br>ps auxf（显示当前终端所有进程+没有控制终端的所有进程，并显示出当前进程拥有者、状态、资源占用及其进程父子关系等详细信息）<br>ps auo pid ,nice（指定查看进程信息）<br></code></pre></td></tr></table></figure><ul><li>动态查看（top）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">top 1（显示所有进程以及逻辑CPU个数）<br>top -p PID（查看指定进程信息）<br>top -u UID（查看指定用户进程信息）<br>平均负载 1 5 15<br>CPU负载=平均负载/CPU逻辑个数<br></code></pre></td></tr></table></figure><h4 id="（四）管理控制进程"><a href="#（四）管理控制进程" class="headerlink" title="（四）管理控制进程"></a>（四）管理控制进程</h4><ul><li>控制进程优先级</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">控制正在运行时的进程优先级（renice）：<br>1、创建一个sleep进程并设置3000s后在后台运行<br>sleep 3000 &amp;<br>2、调整sleep进程优先级<br>renice 优先级 PID <br>优先级分为：-20-19，数字越小优先级越高<br><br>控制进程启动时的优先级（nice）：<br>nice -n 优先级 PID/进程名 [&amp;]（是否后台运行）<br>nice -n -5 sleep &amp;<br></code></pre></td></tr></table></figure><ul><li>控制进程状态<ul><li>如何控制进程状态：用户通过给进程发送信号来控制进程状态</li><li>常见信号及如何发信号</li></ul></li></ul><table><thead><tr><th>常见信号</th><th>含义</th><th>解释</th></tr></thead><tbody><tr><td>1</td><td>SIGHUP</td><td>默认终止控制终端进程（可用来重新加载文件）</td></tr><tr><td>2</td><td>SIGINT</td><td>键盘中断（Ctrl+C）</td></tr><tr><td>3</td><td>SIGQUIT</td><td>键盘退出（Ctrl+\）</td></tr><tr><td>9</td><td>SIGKILL</td><td>杀死进程</td></tr><tr><td>15</td><td>SIGTERM</td><td>正常的结束进程，默认信号</td></tr><tr><td>18</td><td>SIGCONT</td><td>继续</td></tr><tr><td>19</td><td>SIGSTOP</td><td>停止</td></tr><tr><td>20</td><td>SIGTSTP</td><td>暂停（Ctrl+z）</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">给进程发送信号：<br>1、kill<br>给vsftpd进程发送9信号：kill -9 vaftpd_PID<br>2、pkill<br>给当前终端所有进程发送9信号：pkill -9 -t pts/0<br>3、killall<br>给用户所有进程发送9信号：killall -9 -u username<br></code></pre></td></tr></table></figure><ul><li>其他控制进程命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、jobs（查看后台进程）<br>2、bg（将暂停的后台进程依旧运行在后台）<br>bg PId将PID的对应进程放到后台运行<br>bg %n将后台编号为n的进程放在后台继续运行<br>3、fg（将后台进程放到前台来运行）<br>fg PID将PID对应的进程放到前台运行<br>fg %n将后台编号为n的进程放到前台来运行<br></code></pre></td></tr></table></figure><h3 id="二、Linux自带服务"><a href="#二、Linux自带服务" class="headerlink" title="二、Linux自带服务"></a>二、Linux自带服务</h3><h4 id="（一）ssh服务"><a href="#（一）ssh服务" class="headerlink" title="（一）ssh服务"></a>（一）ssh服务</h4><ul><li>知识铺垫<ul><li>客户端和服务端<ul><li>客户端：享受服务</li><li>服务端：提供服务</li><li>B&#x2F;S架构：Bowser → Server</li><li>C&#x2F;S架构：Client → Server</li><li>客户端如何通过网络找到服务端：客户端通过ip（小区）+端口（门牌号）找到对应的服务端</li></ul></li><li>IP端口的设定<ul><li>IP端口号只有整数，范围在：0-65535</li><li>端口号范围和其作用</li></ul></li></ul></li></ul><table><thead><tr><th>端口号</th><th>作用</th></tr></thead><tbody><tr><td>1-255</td><td>一般是知名的端口号，ftp21 ssh22 web80 telnet23</td></tr><tr><td>256-1023</td><td>Unix占用用来提供特殊服务</td></tr><tr><td>1023-5000</td><td>客户端临时端口，随机产生</td></tr><tr><td>5001-65535</td><td>为互联网其他服务预留的端口</td></tr></tbody></table><ul><li>ssh服务概述<ul><li>ssh服务：ssh服务是Linux下远程连接管理服务器的安全协议</li><li>ssh服务功能：远程连接管理服务器</li><li>ssh服务默认端口：默认端口22</li><li>ssh服务架构：ssh服务是C&#x2F;S架构，客户端（Windows：secuerCrt fianlshell Linux：openssh-client）服务端：openssh-server</li></ul></li><li>ssh服务启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、查看sshd服务是否启动<br>systemctl status sshd.service<br>2、启动sshd服务<br>systemctl start sshd.service <br>3、设置sshd服务开机自启<br>systemctl enable --now sshd.service<br>4、重启sshd服务<br>systemctl restart sshd.service<br>5、关闭sshd服务<br>systemctl stop sshd.service<br>6、关闭sshd服务开机自启<br>systemctl disable --now sshd.service<br>7、查看sshd服务端口是否被监听<br>netstat -nltp | grep sshd<br>lsof -i :22<br></code></pre></td></tr></table></figure><ul><li>修改ssh服务端口</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、查看openssh-server软件包的配置文件位置<br>rpm -qc openssh-server<br>2、查看配置文件修改方法<br>man 5 openssh<br>3、修改配置文件<br>vim /etc/ssh/sshd_config<br>port xxxx<br>4、重启sshd服务<br>systemctl restart sshd.service<br>5、验证查看端口是否改变<br>netstat -nltp | grep sshd<br></code></pre></td></tr></table></figure><ul><li>Linux下远程连接工具（ssh）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">功能一：远程连接服务器<br>ssh [选项] [username@]远程IP<br>ssh -p 22 -l username 远程IP<br>ssh -p 22 username@远程IP<br><br>功能二：未登录情况下访问远程服务器执行命令<br>ssh [选项] [username@]远程IP 命令<br>ssh -p 22 username@远程IP ls /root/<br></code></pre></td></tr></table></figure><ul><li>Linux下远程拷贝工具（scp）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">功能一：将本地文件拷贝到远程服务器（push）<br>scp [选项] 本地文件地址 远程IP:存放路径<br>拷贝文件到远程服务器：scp -P port /tmp/test.sh 远程IP:/tmp/<br>拷贝目录到远程服务器：scp -P port -r /tmp/test 远程IP:/tmp/<br><br>功能二：将远程服务器拷贝到本地（pull）<br>scp [选项] 远程IP:文件路径 本地路径<br>将远程服务器文件拷贝到本地：scp -P port 远程服务器:/tmp/test.txt /tmp/<br>将远程服务器文件拷贝到本地并改名：scp -P port 远程服务器:/tmp/test.txt /tmp/file.txt<br></code></pre></td></tr></table></figure><h4 id="（二）ftp服务"><a href="#（二）ftp服务" class="headerlink" title="（二）ftp服务"></a>（二）ftp服务</h4><ul><li>ftp概述<ul><li>什么是ftp协议：FTP（File Tranfer Protocol）文件传输协议，是一种旧的网络协议</li><li>ftp服务的作用：用于在计算机网络上客户端和服务端传输文件。</li></ul></li><li>ftp服务搭建</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell">查看是否以安装ftp软件：<br>rpm -qa | grep vsftpd<br><br>安装vsftpd软件包：<br>1、关闭防火墙和SELinux安全策略（实验环境），非学习环境需要开放防火墙端口<br>systemctl stop firewalld.service（关闭防火墙服务）<br>systemctl disable --now firewalld.service（设置防火墙服务开机自动关闭）<br>firewall-cmd --zone=public --add-port=21/tcp --permanent（永久开放21端口）<br>firewall-cmd --reload（重载防火墙）<br>getenforce（查看SELinux安全策略）<br>setforce 0 or vim /etc/selinux/config（设置SELinux安全策略）<br>2、配置本地yum仓库<br>df -h<br>mount -o ro /dev/sr0 /mnt<br>echo &quot;mount -o ro /dev/sr0 /mnt&quot; &gt;&gt; /etc/rc.d/rc.local<br>chmod +x /etc/rc.local<br>vim /etc/yum.repos.d/local.repo<br>[BaseOS]<br>name=baseos yum<br>baseurl=file:///mnt/BaseOS/<br>enabled=1<br>gpgcheck=0<br>3、安装vsftpd软件包<br>yum -y insatll vsftpd<br>4、启动vsftpd服务<br>systemctl start vsftpd.sevice<br>5、测试验证ftp服务是否开启<br>firefox ftp://localhost:21<br><br>修改配置文件：<br><br>重启vsftpd服务：<br><br>开放21端口：<br></code></pre></td></tr></table></figure><h4 id="（三）ntp时间同步服务"><a href="#（三）ntp时间同步服务" class="headerlink" title="（三）ntp时间同步服务"></a>（三）ntp时间同步服务</h4><ul><li>时间同步服务的重要性<ul><li>it系统中，准确的时间很重要，很多原因都要准确的时间<ul><li>网络传输中，数据包和事务日志需要准确的时间戳</li><li>各种应用程序中，如订单信息和交易信息都需要准确的时间</li></ul></li><li>Linux系统中，Network Time Protocol（NTP）NTP协议有在用户空间中运行的守护程序ntp和chrony实现，CentOS7（ntp&#x2F;chrony）RedHat8（chrony）</li></ul></li><li>时间同步服务器：自己的服务器 → 上一级别的时间服务器 → 上上一级别的时间服务器 → 根时间服务器，推荐网站：<a href="http://www.ntp.org.cn/">www.ntp.org.cn</a></li><li>同步当前系统时间</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、修改配置文件指定ntp服务器同步系统时间<br>查看chrony的配置文件：rpm -qc chrony<br>修改chrony的配置文件：vim /etc/chrony.conf<br>pool cn.ntp.org.cn iburst<br>server ip地址<br>重启服务：systemctl restart chronyd.service<br>2、临时指定ntp服务器同步系统时间<br>chronyd -q &quot;server cn.ntp.org.cn iburst&quot;<br></code></pre></td></tr></table></figure><ul><li>搭建时间同步服务器<ul><li>RHEL7和RHEL8时间同步服务的区别<ul><li>RHEL7支持ntp和chrony工具</li><li>RHEL8不再支持ntp工具，使用chrony守护程序工具代替ntp实现NTP时间同步</li></ul></li><li>ntp和chrony程序的区别<ul><li>ntpd服务器在控制客户端访问方式上响应来自任何地址的请求，相对不安全</li><li>chrony默认情况下不允许客户端访问，只有在allow中指定的ip才能进行访问</li><li>chrony在各种条件下表现良好</li></ul></li><li>RHEL8配置时间同步服务</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs shell">服务器端<br>关闭防火墙和SELinux（实验环境）<br>systemctl -stop firewalld.service<br>systemctl disable --now firewalld.service<br>setenforce 0<br>配置软件仓库<br>df -h<br>mount -o ro /dev/sr0 /mnt<br>echo &quot;mount -o ro /dev/sr0 /mnt&quot; &gt; /etc/rc.local<br>chmod +x /etc/rc.d/rc.local<br>ls /mnt<br>vim /yum.d.repos/local.repo<br>[BaseOS]<br>name=baseos yum <br>baseurl=fiel:///mnt/BaseOs/<br>enabled=1<br>gpgcheck=0<br><br>yum clean all<br>yum makecache<br>yum repolist<br>查看是否安装chrony软件包<br>rpm -q chrony<br>安装chrony、确认是否安装成功、查看软件配置信息<br>yum -y install chrony<br>rpm -q chrony <br>rpm -qc chrony<br>查看man手册如何对配置信息进行修改<br>man 5 /etc/chrony.conf<br>修改配置信息<br>vim /etc/chrony.conf<br>allow 允许的ip/子网掩码<br>重启服务器并设置开机自启<br>systemctl restart chronyd.service<br>systemctl enable --now chronyd.service<br>测试验证服务<br>客户端<br>修改配置文件：vim /etc/chrony.conf <br>pool cn.ntp.org.cn iburst<br>server ip地址<br>重启chronyd服务：systemctl restart chronyd.service<br>显示当前ntp服务器配置源：chronyc source<br>手动同步时间：chronyc makestep（不建议使用，会造成时间同步服务冲突）<br></code></pre></td></tr></table></figure><h4 id="（四）计划任务服务（crond）"><a href="#（四）计划任务服务（crond）" class="headerlink" title="（四）计划任务服务（crond）"></a>（四）计划任务服务（crond）</h4><ul><li>计划任务服务crond的作用<ul><li>作用：解放双手，解放时间</li><li>计划任何，让系统在未来指定时间执行指定的某些任务（程序），可以周期性的执行也可只执行一次</li><li>crond属于Linux内置服务，默认情况下是安装好的</li></ul></li><li>相关文件</li></ul><table><thead><tr><th>目录&amp;文件</th><th>作用</th></tr></thead><tbody><tr><td>&#x2F;etc&#x2F;cron.d&#x2F;</td><td></td></tr><tr><td>&#x2F;etc&#x2F;cron.d&#x2F;Ohourly</td><td>系统每小时需要执行的任务</td></tr><tr><td>&#x2F;etc&#x2F;cron.d&#x2F;raid-check</td><td></td></tr><tr><td>&#x2F;etc&#x2F;cron.deny</td><td>用户拒绝列表（在该文件中的用户不能使用cron服务）</td></tr><tr><td>&#x2F;etc&#x2F;crontab</td><td>可定义系统计划服务</td></tr><tr><td>&#x2F;etc&#x2F;cron.monthly&#x2F;</td><td>存放系统每个月需要执行的脚本</td></tr><tr><td>&#x2F;etc&#x2F;cron.weekly&#x2F;</td><td>存放系统每周需要执行的脚本</td></tr><tr><td>&#x2F;etc&#x2F;cron.hourly&#x2F;</td><td>存放系统每小时需要执行的脚本</td></tr><tr><td>&#x2F;etc&#x2F;cron.daily&#x2F;</td><td>存放系统每天需要执行的脚本</td></tr><tr><td>&#x2F;var&#x2F;spool&#x2F;cron</td><td>存放各个用户自己设定的定时任务，普通用户无法访问</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;cron</td><td>计划任务信息的日志文件</td></tr></tbody></table><ul><li>创建、查看、修改、删除计划任务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、用户创建、查看、修改、删除计划任务<br>crontab -e（用户创建、修改计划任务）<br>crontab -l（用户查看计划任务）<br>crontab -r（用户删除计划任务）<br>/var/spool/cron/（用户创建的计划任务的路径）<br>2、管理员用户给其他用户创建、修改、删除计划任务<br>crontab -e -u username（管理员用户给指定用户创建、修改计划任务）<br>crontab -l -u username（管理员用户查看指定用户的计划任务）<br>crontab -r -u username（管理员用户删除指定用户的计划任务）<br></code></pre></td></tr></table></figure><ul><li>编写简单的计划任务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/crontab（查看计划任务规则）<br>* * * * * 分别表示 分（0-59） 时（0-23） 日（1-31） 月（1-12） 周（1-7） <br>特殊字符：，（分隔，间隔）-（表示一个段）/n（表示n的单位执行一次）<br>例如：<br>1、礼拜一和礼拜三每两小时执行一次任务：00 */2 * * 1,3<br>2、每个月1-15号和25号的早上8：00-18：00每隔两个小时执行一个任务：00 08-18/2 1-15,25 * * <br></code></pre></td></tr></table></figure><h2 id="第九章、Linux实战（LAMP架构环境搭建-项目上线）"><a href="#第九章、Linux实战（LAMP架构环境搭建-项目上线）" class="headerlink" title="第九章、Linux实战（LAMP架构环境搭建+项目上线）"></a>第九章、Linux实战（LAMP架构环境搭建+项目上线）</h2><h3 id="一、LAMP架构介绍"><a href="#一、LAMP架构介绍" class="headerlink" title="一、LAMP架构介绍"></a>一、LAMP架构介绍</h3><h4 id="（一）什么是LAMP架构"><a href="#（一）什么是LAMP架构" class="headerlink" title="（一）什么是LAMP架构"></a>（一）什么是LAMP架构</h4><ul><li>L：Linux操作系统</li><li>A：Apache web服务器</li><li>M：MySQL数据库管理系统</li><li>P：PHP语言环境</li></ul><h4 id="（二）Apache、PHP、MySQL各自的作用"><a href="#（二）Apache、PHP、MySQL各自的作用" class="headerlink" title="（二）Apache、PHP、MySQL各自的作用"></a>（二）Apache、PHP、MySQL各自的作用</h4><ul><li>APache web服务器：处理用户的访问请求，解析网站静态页面，并将网站的静态资源反送给客户端。</li><li>PHP：调用libphpx（x是版本号）.so模块对网站的静态资源进行解析，如果需要后台数据，php程序会连接数据库，最终PHP将解析好的资源发送给Apache（httpd）服务器,Apache再将数据返回给用户。</li><li>MySQL：关系型数据库管理系统，用于永久的数据存储。</li></ul><h4 id="（三）搭建LAMP环境"><a href="#（三）搭建LAMP环境" class="headerlink" title="（三）搭建LAMP环境"></a>（三）搭建LAMP环境</h4><ul><li>准备Linux环境</li><li>安装web服务器httpd</li><li>安装PHP语言环境</li><li>安装mysql数据库管理系统</li></ul><h3 id="二、部署LAMP环境"><a href="#二、部署LAMP环境" class="headerlink" title="二、部署LAMP环境"></a>二、部署LAMP环境</h3><h4 id="（一）关闭防火墙和SELinux"><a href="#（一）关闭防火墙和SELinux" class="headerlink" title="（一）关闭防火墙和SELinux"></a>（一）关闭防火墙和SELinux</h4><ul><li>关闭防火墙</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop firewalld.service<br>systemctl disable --now firewall.service<br>或者使用web控制台关闭防火墙<br></code></pre></td></tr></table></figure><ul><li>关闭SELinux安全策略</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">setenforce 0（使用命令）<br>vim /etc/selinux/config（修改配置文件）<br>web控制台<br></code></pre></td></tr></table></figure><h4 id="（二）配置本地yum仓库"><a href="#（二）配置本地yum仓库" class="headerlink" title="（二）配置本地yum仓库"></a>（二）配置本地yum仓库</h4><ul><li>显示文件系统信息：df -h</li><li>挂在镜像到&#x2F;mnt目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mount -o ro /dev/sr0 /mnt <br>echo &quot;mount -o ro /dev/sr0 /mnt &quot; &gt; /etc/rc.local<br>chmod +x /etc/rc.d/rc.local <br></code></pre></td></tr></table></figure><ul><li>修改yum配置文件指定本地储存库</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/yum.d.repos/local.repo<br>[BaseOS]<br>name=baseos yum<br>baseurl=file:///mnt/BaseOS/<br>enabled=1<br>gpgcheck=0<br></code></pre></td></tr></table></figure><ul><li>验证yum源是否配置完成</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum clean all<br>yum makecache<br>yum repolist<br></code></pre></td></tr></table></figure><h4 id="（三）部署LAMP环境"><a href="#（三）部署LAMP环境" class="headerlink" title="（三）部署LAMP环境"></a>（三）部署LAMP环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、安装httpd软件包<br>yum -y install httpd<br>2、安装PHP语言环境<br>yum -y install php-xml-7.2.11-1.module+el8+2561+1aca3413.x86_64 \ <br>php-json-7.2.11-1.module+el8+2561+1aca3413.x86_64 \ <br>php-mysqlnd-7.2.11-1.module+el8+2561+1aca3413.x86_64 \ <br>php-common-7.2.11-1.module+el8+2561+1aca3413.x86_64 \ <br>php-fpm-7.2.11-1.module+el8+2561+1aca3413.x86_64 \ <br>php-bcmath-7.2.11-1.module+el8+2561+1aca3413.x86_64 \ <br>php-cli-7.2.11-1.module+el8+2561+1aca3413.x86_64 \ <br>php-7.2.11-1.module+el8+2561+1aca3413.x86_64 \<br>php-gd-7.2.11-1.module+el8+2561+1aca3413.x86_64 \<br>php-pdo-7.2.11-1.module+el8+2561+1aca3413.x86_64 \ <br>php-devel-7.2.11-1.module+el8+2561+1aca3413.x86_64<br>3、安装MySQL数据库管理系统<br>yum -y install mariadb-server mariadb<br></code></pre></td></tr></table></figure><h4 id="（四）启动相关服务"><a href="#（四）启动相关服务" class="headerlink" title="（四）启动相关服务"></a>（四）启动相关服务</h4><ul><li>启动前端web服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start httpd.service（开启httpd服务）<br>systemctl enable --now httpd.service（设置httpd服务开机自启）<br>web服务配置文件：/etc/httpd/conf/httpd.conf<br>网站存放位置：/var/www/html/<br>在浏览器中输入：http://ip地址:80,查看服务是否开启<br></code></pre></td></tr></table></figure><ul><li>启动后台数据库服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start mariadb.service（开启MySQL服务）<br>systemctl enable --now mariadb.service（设置服务开机自启）<br>mysql（验证服务是否开启）<br>mysqladmin -u root password &#x27;xxxxxx&#x27;（给root用户设置密码）<br>mysql -u root -p（用root用户登录到MySQL）<br></code></pre></td></tr></table></figure><h4 id="（五）验证部署环境"><a href="#（五）验证部署环境" class="headerlink" title="（五）验证部署环境"></a>（五）验证部署环境</h4><ul><li>验证MySQL服务是否开启</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">netstat -nltp | grep :3306（查看mysql默认端口是否被监听）<br>systemctl status mariadb.service<br></code></pre></td></tr></table></figure><ul><li>验证web服务是否开启且PHP页面是否可解析</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">在/var/www/html/目录下新建文件index.php：touch /var/www/html/index.php<br>编辑index.php文件：vim /var/www/html/index.php<br>编辑内容：<br>&lt;?php<br>    phpinfo();<br>?&gt;<br>打开浏览器对网站进行访问：firefox http://IP地址[:80]<br></code></pre></td></tr></table></figure><h3 id="三、上线商城项目"><a href="#三、上线商城项目" class="headerlink" title="三、上线商城项目"></a>三、上线商城项目</h3><h4 id="（一）上传源码到服务器"><a href="#（一）上传源码到服务器" class="headerlink" title="（一）上传源码到服务器"></a>（一）上传源码到服务器</h4><ul><li>使用远程连接工具连接到虚拟机</li><li>在&#x2F;root&#x2F;目录西创建一个lamp目录用来存放网站源码压缩包</li><li>将网站源码包上传到lamp目录下</li></ul><h4 id="（二）将源码解压到指定文件"><a href="#（二）将源码解压到指定文件" class="headerlink" title="（二）将源码解压到指定文件"></a>（二）将源码解压到指定文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">zip -r /root/lamp/phpshe.zip -d /var/www/html/<br></code></pre></td></tr></table></figure><h4 id="（三）查看源码文档按需求进行配置"><a href="#（三）查看源码文档按需求进行配置" class="headerlink" title="（三）查看源码文档按需求进行配置"></a>（三）查看源码文档按需求进行配置</h4><ul><li>查看源码文档：ls &#x2F;var&#x2F;www&#x2F;html&#x2F;</li><li>查看apache是否有权对网站文件进行操作，如果没有权限就给apache添加权限</li><li>重启网站服务</li></ul><h4 id="（四）安装网站"><a href="#（四）安装网站" class="headerlink" title="（四）安装网站"></a>（四）安装网站</h4><ul><li>每个网站的安装方式不同，需要根据网站的说明文档进行对应的操作</li><li>当前网站项目安装方式为：ip地址&#x2F;install</li></ul><h4 id="（五）验证网站是否上线成功"><a href="#（五）验证网站是否上线成功" class="headerlink" title="（五）验证网站是否上线成功"></a>（五）验证网站是否上线成功</h4><ul><li>打开浏览器输入：ip&#x2F;index.php查看网站前台是否安装成功</li><li>打开浏览器输入：ip&#x2F;admin.php查看网站后台是否安装成功</li></ul><h4 id="（六）注意点"><a href="#（六）注意点" class="headerlink" title="（六）注意点"></a>（六）注意点</h4><ul><li>上线一个网站前，应该先了解网站的架构，再进行对应的环境配置</li><li>网站上线前一定要事先进过验证配置环境的可用性和完整性</li><li>上线网站的时候一定要根据网站的说明文档进行操作</li></ul><h2 id="第十章、阿里云服务器、宝塔面板、网站建设"><a href="#第十章、阿里云服务器、宝塔面板、网站建设" class="headerlink" title="第十章、阿里云服务器、宝塔面板、网站建设"></a>第十章、阿里云服务器、宝塔面板、网站建设</h2><h3 id="一、阿里云服务器"><a href="#一、阿里云服务器" class="headerlink" title="一、阿里云服务器"></a>一、阿里云服务器</h3><ul><li>说明：阿里云服务器需要钱</li><li>注册登录阿里云</li><li>购买阿里云ECS云服务器</li><li>远程连接服务器</li><li>搭建LAMP环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、关闭防火墙（或开启防火墙端口）和SElinux安全策略：<br>关闭防火墙：systemctl stop firewalld.service <br>设置防火墙开机自动关闭：systemctl disable --now firewalld.service<br>查看SELinux策略：getenforce<br>设置SELinux策略：setenforce 0 or vim /etc/selinux/config<br>开放对应服务的防火墙：firewall-cmd --add-server=example --permanent（永久开放）<br>开放防火墙端口：firewall-cmd --zone=public --add-port=8080/tcp --permanent（永久开放）<br>重载防火墙：firewall-cmd --reload<br>重新启动服务：systemctl restart example.service<br><br>配置本地yum源或者网络yum源：<br><br>安装软件：<br>①检查软件是否已经安装，如果安装则要先删除已安装的软件包：<br>查看软件是否安装：rpm -q xxxx<br>安装已删除的软件：rpm -qa | grep xxxx | xargs yum -y remove<br>②安装软件包：<br>yum -y install httpd<br>yum -y install mariadb-server mariadb<br>yum -y install PHP语言环境<br>③查找配置文件位置：rpm -qc software<br>④查看配置文件文档：man 5 /etc/example.conf<br>⑤按需求修改配置文件：vim /etc/example.conf<br>⑥重启服务：<br>1、前台服务<br>systemctl restart httpd.service<br>systemctl enable --now httpd.service<br>2、后台服务<br>systemctl start mariadb.service<br>systemctl enable --now mariadb.service<br>mysqladmin -u root password &#x27;passwd&#x27;<br>mysql -u root -p<br>⑦验证测试：<br>验证前台服务是否开启：浏览器中输入ip地址:80<br>验证网站动态资源是否可解析：<br>1、根据不同的web服务器查看其网站根目录<br>/var/www/html/<br>2、在网站根目录中创建一个index.php文件<br>touch /var/www/html/index.php<br>3、编辑index.php文件<br>vim /var/www/html/index.php<br>&lt;?php<br>    phpinfo();<br>?&gt;<br>4、浏览器中验证<br>浏览器中输入：ip:port/index.php<br></code></pre></td></tr></table></figure><ul><li>项目上线，测试验证<ul><li>项目上线<ul><li>远程连接服务器</li><li>将项目源码上传到服务器</li><li>将源码解压到指定位置</li><li>根据说明文档进行相关设置</li><li>重启服务器</li><li>根据说明文档安装网站</li></ul></li><li>测试验证<ul><li>查看网站前台是否安装成功</li><li>查看网站后台是否安装成功</li></ul></li></ul></li></ul><h3 id="二、宝塔面板"><a href="#二、宝塔面板" class="headerlink" title="二、宝塔面板"></a>二、宝塔面板</h3><ul><li>安装宝塔：按照系统的发行版和版本悬着合适的命令下载宝塔面板</li><li>在阿里云安装组中放行宝塔端口</li><li>一键部署LAMP&#x2F;LNMP架构环境</li><li>部署项目&#x2F;网站</li><li>放行80端口</li><li>访问网站</li></ul><h2 id="第十一章、环境变量、Linux开发环境搭建"><a href="#第十一章、环境变量、Linux开发环境搭建" class="headerlink" title="第十一章、环境变量、Linux开发环境搭建"></a>第十一章、环境变量、Linux开发环境搭建</h2><h3 id="一、环境变量"><a href="#一、环境变量" class="headerlink" title="一、环境变量"></a>一、环境变量</h3><h4 id="（一）环境变量概述"><a href="#（一）环境变量概述" class="headerlink" title="（一）环境变量概述"></a>（一）环境变量概述</h4><ul><li>什么是环境变量<ul><li>变量：变量是计算机系统中用来存放可变值的数据类型，我们可以通过变量名来提取变量值。</li><li>环境变量：环境变量是指在操作系统中指定操作系统运行时的环境的变量。</li></ul></li><li>环境变量的作用：定义命令执行的路径，可以不用加路径就执行该命令。</li><li>常见的环境变量</li></ul><table><thead><tr><th>环境变量名称</th><th>作用</th></tr></thead><tbody><tr><td>HOME</td><td>用户的主目录（也称家目录）</td></tr><tr><td>SHELL</td><td>用户使用的 Shell 解释器名称</td></tr><tr><td>PATH</td><td>定义命令行解释器搜索用户执行命令的路径</td></tr><tr><td>EDITOR</td><td>用户默认的文本解释器</td></tr><tr><td>RANDOM</td><td>生成一个随机数字</td></tr><tr><td>LANG</td><td>系统语言、语系名称</td></tr><tr><td>HISTSIZE</td><td>输出的历史命令记录条数</td></tr><tr><td>HISTFILESIZE</td><td>保存的历史命令记录条数</td></tr><tr><td>PS1</td><td>Bash解释器的提示符</td></tr><tr><td>MAIL</td><td>邮件保存路径</td></tr></tbody></table><h4 id="（二）用户环境变量"><a href="#（二）用户环境变量" class="headerlink" title="（二）用户环境变量"></a>（二）用户环境变量</h4><ul><li>什么是用户环境变量：只针对当前用户的环境变量</li><li>添加用户环境变量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">用户环境变量存放位置：~/.bash_profile（RHEL、CentOS）~/.profile（Debian、Ubuntu）<br>编辑用户环境变量文件：vim ~/.bash_profile<br>添加环境变量：<br>PATH=/usr/local/node/node版本/bin:$PATH<br>重载用户环境变量：source ~/.bash_profile<br>验证环境变量：<br>1、使用版本查看命令：node -v &amp;&amp; npm -v &amp;&amp; npx -v<br>2、env查看所有环境变量<br>3、echo $PATH 查看PATH环境变量<br>注意：在Linux系统中环境变量名要以大写形式命名<br></code></pre></td></tr></table></figure><h4 id="（三）系统环境变量"><a href="#（三）系统环境变量" class="headerlink" title="（三）系统环境变量"></a>（三）系统环境变量</h4><ul><li>系统环境变量：针对当前系统中所有用户都有效的环境变量</li><li>添加系统环境变量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">系统环境变量文件位置：/etc/profile<br>编辑系统环境变量文件：vim /etc/profile<br>添加环境变量：<br>    方式一、直接在/etc/profile文件中添加环境变量<br>    JAVA_HOME=/usr/local/java/jdk-8u11-linux.64<br>    CLASSPATH=$JAVA_HOME/lib<br>    PATH=$PATH:$JAVA_HOME/bin<br>    export JAVA_HOME CLASSPATH PATH<br>    方式二、在/etc/profile.d/目录下创建一个可执行脚本里添加变量<br>    vim /etc/profile.d/myprofile.sh<br>    #!/bin/sh<br>    JAVA_HOME=/usr/local/java/jdk-8u11-linux.64<br>    CLASSPATH=$JAVA_HOME/lib<br>    PATH=$PATH:$JAVA_HOME/bin<br>    export JAVA_HOME CLASSPATH PATH<br>重载系统环境变量文件：source /etc/profile<br>验证环境变量：<br>1、使用版本命令查看：java -version<br>2、查看所有环境变量：env<br>3、查看指定环境变量的位置：echo $JAVA_HOME<br></code></pre></td></tr></table></figure><h3 id="二、Linux基础开发环境搭建"><a href="#二、Linux基础开发环境搭建" class="headerlink" title="二、Linux基础开发环境搭建"></a>二、Linux基础开发环境搭建</h3><h4 id="（一）Git项目管理工具环境安装"><a href="#（一）Git项目管理工具环境安装" class="headerlink" title="（一）Git项目管理工具环境安装"></a>（一）Git项目管理工具环境安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell">方式一、通过本地yum仓库安装<br>yum -y install git<br><br>方式二、通过源码包安装<br>1、查看并卸载已安装的Git软件包<br>rpm -qa | grep git <br>yum -y remove 安装的git<br><br>2、上传源码包到指定目录下<br>使用远程工具将文件上传到/root/temp/目录下<br><br>3、解压源码包<br>tar -zxvf git-xxx-linux.x64.tar.gz -C ./<br><br>4、安装相关依赖<br>yum install curl-devel expat-devel gettext-devel openssl-devel zlibdevel gcc-c++ perl-ExtUtils-MakeMaker<br><br>5、编译安装git包<br>进入git解压目录：cd ./git-xxx-linux.x64<br>将git安装到/usr/local/git/目录下：<br>make ./configure<br>./configure --prefix=/usr/local/git<br>正式编译安装：<br>make profix=/usr/local/git<br>make install<br><br>6、配置git环境变量<br>vim /etc/profile.d/myprofile.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/sh</span><br>export GIT_HOME=/usr/local/git/git-xxx-linux.64<br>export PATH=$PATH:$GIT_HOME/bin<br>source /etc/profile<br><br>7、验证git环境是否安装完成<br>git --version<br></code></pre></td></tr></table></figure><h4 id="（二）JDK环境安装"><a href="#（二）JDK环境安装" class="headerlink" title="（二）JDK环境安装"></a>（二）JDK环境安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、上传文件到指定位置<br>2、在/usr/local/目录下创建一个java目录<br>mkdir /usr/local/java<br><br>3、将jdk源码包解压到/usr/local/java目录下<br>tar -zxvf jdk-8u11-linux.64.tar.gz -C /usr/local/java/<br><br>4、配置jdk环境变量<br>vim /etc/profile.d/myprofile.sh<br><br>JAVA_HOME=/usr/local/usr/jdk-8u11-linux.64<br>CLASSPATH=$JAVA_HOME/lib<br>PATH=$PATH:$JAVA_HOME/bin<br>export JAVA_HOME CLASSPATH PATH<br><br>5、重载环境变量<br>source /etc/profile<br><br>6、验证jdk环境<br>java --version<br></code></pre></td></tr></table></figure><h4 id="（三）Node环境安装"><a href="#（三）Node环境安装" class="headerlink" title="（三）Node环境安装"></a>（三）Node环境安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、上传文件到指定目录下<br>2、在/usr/local/目录下创建一个node目录<br>mkdir /usr/local/node<br><br>3、将node源码包解压到node目录下<br>tar -Jxvf node-v12.18.1-linux.64.tar.xz -C /usr/local/node<br><br>4、配置node环境变量<br>vim ~/.bash_profile<br><br>PATH=/usr/local/node/node-v12.18.1-linux.64/bin:$PATH<br><br>5、重载环境变量<br>source ~/.bash_profile<br><br>6、验证node环境<br>node -v &amp;&amp; npm -v &amp;&amp; npx -v<br></code></pre></td></tr></table></figure><h4 id="（四）Python环境安装"><a href="#（四）Python环境安装" class="headerlink" title="（四）Python环境安装"></a>（四）Python环境安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、将Python源码包上传到指定位置<br>2、解压Python源码包<br>tar -Jxvf Python-3.8.3.tar.xz -C ./<br><br>3、安装相关依赖<br>yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlitedevel readline-devel tk-devel gcc make<br><br>4、编译安装Python<br>cd /Python-3.8.3<br>./configure prefix=/usr/local/Python3<br>make &amp;&amp; make install<br><br>5、创建软连接<br>ln -s /usr/local/Python3/bin/python3 /usr/bin/python3<br>ln -s /usr/local/Python3/bin/pip3 /usr/local/pip3<br><br>6、验证Python环境<br>python3<br></code></pre></td></tr></table></figure><h4 id="（五）Maven项目构建和管理工具部署"><a href="#（五）Maven项目构建和管理工具部署" class="headerlink" title="（五）Maven项目构建和管理工具部署"></a>（五）Maven项目构建和管理工具部署</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、上传文件到指定位置<br>2、在/opt/目录下创建maven目录<br>mkdir /opt/maven<br><br>3、将maven源码包解压到/opt/maven/目录下<br>tar -zxvf apache-maven-3.6.3-bin-linux.64.tar.gz -C /opt/maven<br><br>4、配置maven加速镜像源<br>vim /opt/maven/apache-maven-3.6.3/conf/setting.xml<br>&lt;mirror&gt;<br>    &lt;id&gt;aliyunmaven&lt;/id&gt;<br>    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;<br>    &lt;name&gt;阿里云公共仓库&lt;/name&gt;<br>    &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;<br>&lt;/mirror&gt;<br><br>5、配置maven环境变量<br>vim /etc/profile.d/myprofile.sh<br><br>export MAVEN_HOME=/opt/maven/apache-maven-3.6.3<br>export PATH=$PATH:$MAVEN_HOME/bin<br><br>6、验证maven环境变量<br>mvn -v<br></code></pre></td></tr></table></figure><h4 id="（六）MySQL数据库安装部署"><a href="#（六）MySQL数据库安装部署" class="headerlink" title="（六）MySQL数据库安装部署"></a>（六）MySQL数据库安装部署</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、将mysql安装包上传到指定的文件夹<br><br>2、查询并删除已安装的mariadb数据库<br>rpm -qa | grep mariadb<br>rpm -qa | grep mariadb | xargs yum remove -y<br><br>3、将mysql安装包解压到在/usr/local/目录下并重命名为mysql<br>tar -Jxvf /package/mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz -C /usr/local<br>mv mysql-8.0.21-linux-glibc2.12-x86_64/ mysql<br><br>4、创建mysql数据存储目录&amp;创建mysql用户和用户组并修改mysql目录的归属用户<br>mkdir /usr/local/mysql/data<br>groupadd mysql<br>useradd -g mysql mysql<br>chown -R mysql:mysql /usr/local/mysql/<br><br>5、编辑mysql配置文件<br>touch /etc/my.cnf<br>vim /etc/my.cnf<br>配置内容如下：<br>[mysql]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql客户端默认字符集</span><br>default-character-set=utf8<br>socket=/var/lib/mysql/mysql.sock<br>[mysqld]<br>skip-name-resolve<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置3306端⼝</span><br>port = 3306<br>socket=/var/lib/mysql/mysql.sock<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql的安装⽬录</span><br>basedir=/usr/local/mysql<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql数据库的数据的存放⽬录</span><br>datadir=/usr/local/mysql/data<br><span class="hljs-meta prompt_"># </span><span class="language-bash">允许最⼤连接数</span><br>max_connections=200<br><span class="hljs-meta prompt_"># </span><span class="language-bash">服务端使⽤的字符集默认为8⽐特编码的latin1字符集</span><br>character-set-server=utf8<br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新表时将使⽤的默认存储引擎</span><br>default-storage-engine=INNODB<br>lower_case_table_names=1<br>max_allowed_packet=16M<br><br>6、创建MySQL默认的数据文档存储目录/var/lib/mysql，并修改权限<br>mkdir /var/lib/mysql<br>chmod 777 /var/lib/mysql<br><br>7、正式安装mysql<br>cd /usr/local/mysql<br>./bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data<br><br>8、复制启动脚本到资源目录并修改basedir和datadir的实际目录<br>cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld<br>vim /etc/init.d/mysqld<br>修改内容如下：<br>basedir=/usr/local/mysql<br>datadir=/usr/local/mysql/data<br><br>9、设置mysql系统服务并开启自启<br>chmod +x /etc/init.d/mysqld<br>chkconfig --add mysqld<br>chkconfig --list mysqld<br>systemctl start mysqld<br>systemctl enable --now mysqld<br>systemctl status mysqld<br><br>10、将mysql的bin目录加入PATH环境变量<br>vim /etc/profile.d/myprofile.sh<br><br>export PATH=$PATH:/usr/local/mysql/bin<br><br>source /etc/profile<br><br>11、登录mysql修改root密码并设置远程登录<br>mysql -u root -p<br>登录上mysql后输入：<br>alter user user() identified by &quot;需设置的密码&quot;;<br>flush privileges;<br>密码设置好后设置远程主机登录：<br>use mysql<br>update user set user.Host=&#x27;%&#x27; where user.User=&#x27;root&#x27;;<br>flush privileges;<br></code></pre></td></tr></table></figure><h4 id="（七）Redis缓存安装部署"><a href="#（七）Redis缓存安装部署" class="headerlink" title="（七）Redis缓存安装部署"></a>（七）Redis缓存安装部署</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、将redis源码包上传到服务器指定位置<br>2、在/usr/local/目录下创建redis目录<br>mkdir /usr/local/redis<br><br>3、将redis源码包解压到redis目录<br>cd /usr/local/redis<br>tar -zxvf redis-6.0.5.tar.gz -C./<br><br>4、编译安装redis<br>cd redis-6.0.5<br>make &amp;&amp; make install<br><br>5、将redis安装为系统服务并后台启动<br>cd utils<br>./install_server.sh<br>如果出现以下错误：<br>This systems seems to use systemd.<br>Please take a look at the provided example service unit files in this directory, and adapt and install them. Sorry!<br><br>请编辑install_server.sh可执行文件<br>注释如下代码：<br><span class="hljs-meta prompt_">#</span><span class="language-bash">bail <span class="hljs-keyword">if</span> this system is managed by systemd</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">_pid_1_exe=<span class="hljs-string">&quot;<span class="hljs-subst">$(readlink -f /proc/1/exe)</span>&quot;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;_pid_1_exe##*/&#125;</span>&quot;</span> = systemd ]</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">then</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;This systems seems to use systemd.&quot;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Please take a look at the provided example service unit files in this directory, and adapt and install them. Sorry!&quot;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">      <span class="hljs-built_in">exit</span> 1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">fi</span></span><br>6、查看redis服务启动状态<br>systemctl status redis_6379.service<br><br>7、启动redis客户端并测试<br>启动自带的redis-cli客户端并测试<br>redis-cli<br>测试通过但此时还不能远程连接，还需要做部分设置<br><br>8、设置允许远程连接<br>编辑redis配置文件<br>vim /etc/redis/6379.conf<br>将127.0.0.1修改为0.0.0.0<br>重启服务：systemctl restart redis_6379.service<br><br>9、设置访问密码<br>编辑redis配置文件<br>vim /etc/redis/6379.conf<br>查找到#requirepass foobread<br>取消注释并将foobread修改为自己设置的密码<br>重启服务<br>systemctl restart redis_6379.service<br><br>10、验证测试<br>启动redis-cli客户端<br>输入：get foo<br>(error) NOAUTH Authentication required.（提示我们需要输入密码）<br>auth password（你自己设置的密码）<br></code></pre></td></tr></table></figure><h4 id="（八）消息队列Rabbit-MQ安装"><a href="#（八）消息队列Rabbit-MQ安装" class="headerlink" title="（八）消息队列Rabbit MQ安装"></a>（八）消息队列Rabbit MQ安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell">一、安装erlang环境<br>因为RabbitMQ需要erlang环境支持所以我们要先安装erlang环境<br>1、进入rabbit官网的erlang页面：https://packagecloud.io/rabbitmq/erlang<br><br>2、选择对应的版本：erlang-23.0.4-1.el8.x86_64.rpm进入该链接<br><br>3、安装erlang环境的yum源<br>curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | sudo bash<br><br>4、安装erlang环境<br>yum -y install erlang<br><br>5、验证是否安装完成<br>erl<br><br>二、安装RabbitMQ<br>1、进入rabbitmq官网的rabbit页面：https://packagecloud.io/rabbitmq/rabbitmq-server<br><br>2、选择对应的版本：rabbitmq-server-3.8.8-1.el8.noarch.rpm，进入连接<br><br>3、安装rabbitmq的yum源<br>curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | sudo bash<br><br>4、安装rabbitmq<br>yum -y install rabbitmq-server.noarch<br><br>5、启动rabbitmq-server，并设置开机自启<br>systemctl start rabbitmq-server.service<br>systemctl enable --now rabbitmq-server.service<br><br>6、开启web可视化管理插件，在浏览器中验证查看<br>开启web可视化管理插件：rabbitmq-plugins enable rabbitmq_management<br>浏览器验证：服务器IP:15672<br></code></pre></td></tr></table></figure><h4 id="（九）Tomcat-应用服务器安装"><a href="#（九）Tomcat-应用服务器安装" class="headerlink" title="（九）Tomcat 应用服务器安装"></a>（九）Tomcat 应用服务器安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、上传文件到指定位置<br>2、在/usr/local/目录下创建tomcat目录<br>mkdir /usr/local/tomcat<br><br>3、将tomcat源码包解压到/usr/local/tomcat/目录下<br>cd /usr/local/tomcat<br>tar -zxvf apache-tomcat-9.0.37.tar-gz -C ./<br><br>4、启动tomcat<br>/usr/local/tomcat/apache-tomcat-9.0.37/bin/startup.sh（开启tomcat）<br>/usr/local/tomcat/apache-tomcat-9.0.37/bin/shutdown.sh（关闭tomcat）<br><br>5、设置快捷操作和开机自启<br></code></pre></td></tr></table></figure><h4 id="（十）Nginx-web服务器安装"><a href="#（十）Nginx-web服务器安装" class="headerlink" title="（十）Nginx web服务器安装"></a>（十）Nginx web服务器安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、上传Nginx源码包到指定位置<br>2、在/usr/local/目录下创建nginx目录<br>mkdir /usr/local/nginx<br><br>3、将Nginx源码包解压到nginx目录下<br>cd /usr/local/nginx<br>tar -zxvf nginx-1.19.0.tar.gz -C ./<br><br>4、安装额外的依赖<br>yum -y install pcre-devel<br>yum -y install openssl openssl-devel<br><br>5、编译安装nginx<br>cd nginx-1.19.0<br>./configure<br>make &amp;&amp; make install<br><br>6、启动nginx<br>/usr/local/nginx/sbin/nginx（启动nginx）<br>/usr/local/nginx/sbin/nginx -s stop（关闭nginx）<br>/usr/local/nginx/sbin/nginx -s reload（重启nginx）<br>firewall-cmd --zone=public --add-port=80/tcp --permanent（放行服务器80端口）<br>firewall-cmd --reload（重载防火墙）<br><br>7、在浏览器中验证是否启动<br>firefox http://ip<br>注意：nginx的配置文件位置：/usr/local/nginx/conf/nginx.conf<br></code></pre></td></tr></table></figure><h4 id="（十一）Docker环境安装"><a href="#（十一）Docker环境安装" class="headerlink" title="（十一）Docker环境安装"></a>（十一）Docker环境安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、安装Docker<br>yum -y install docker<br>2、启动Docker服务，并设置开机自启<br>systemctl start docker.service<br>systemctl enable --now docker.service<br>3、查看docker版本<br>docker version<br>4、配置docker镜像下载加速<br>vim /etc/docker/daemon.json<br><br>&#123;<br>    &quot;registry-mirrors&quot;:[&quot;http://hub-mirror.c.163.com&quot;]<br>&#125;<br>国内加速站点<br>https://registry.docker-cn.com<br>http://hub-mirror.c.163.com<br>https://3laho3y3.mirror.aliyuncs.com<br>http://f1361db2.m.daocloud.io<br>https://mirror.ccs.tencentyun.com<br><br>5、重载docker/deamon.json配置文件，并重启docker服务<br></code></pre></td></tr></table></figure><h4 id="（十二）Kubernetes集群安装部署"><a href="#（十二）Kubernetes集群安装部署" class="headerlink" title="（十二）Kubernetes集群安装部署"></a>（十二）Kubernetes集群安装部署</h4><h4 id="（十三）Elasticsearch集群安装部署"><a href="#（十三）Elasticsearch集群安装部署" class="headerlink" title="（十三）Elasticsearch集群安装部署"></a>（十三）Elasticsearch集群安装部署</h4><h4 id="（十四）ZooKeeper安装部署"><a href="#（十四）ZooKeeper安装部署" class="headerlink" title="（十四）ZooKeeper安装部署"></a>（十四）ZooKeeper安装部署</h4><h4 id="（十五）消息队列kafka安装部署"><a href="#（十五）消息队列kafka安装部署" class="headerlink" title="（十五）消息队列kafka安装部署"></a>（十五）消息队列kafka安装部署</h4><h2 id="第十二章、前后端分离项目ruoyi部署"><a href="#第十二章、前后端分离项目ruoyi部署" class="headerlink" title="第十二章、前后端分离项目ruoyi部署"></a>第十二章、前后端分离项目ruoyi部署</h2><h3 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h3><h3 id="二、修改配置文件"><a href="#二、修改配置文件" class="headerlink" title="二、修改配置文件"></a>二、修改配置文件</h3><h3 id="三、部署前端项目"><a href="#三、部署前端项目" class="headerlink" title="三、部署前端项目"></a>三、部署前端项目</h3><h3 id="四、部署后端项目"><a href="#四、部署后端项目" class="headerlink" title="四、部署后端项目"></a>四、部署后端项目</h3>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>系统</tag>
      
      <tag>RHEL 8</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
